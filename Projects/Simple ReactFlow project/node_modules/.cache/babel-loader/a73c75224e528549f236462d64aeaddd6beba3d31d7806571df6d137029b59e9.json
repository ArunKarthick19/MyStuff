{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arunk\\\\Documents\\\\Arun works\\\\tt\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from 'react';\nimport ReactFlow, { MiniMap, Controls, Background, useNodesState, useEdgesState, addEdge } from 'react-flow-renderer';\nimport 'react-flow-renderer/dist/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialNodes = [{\n  id: 'start',\n  position: {\n    x: 300,\n    y: 50\n  },\n  data: {\n    label: 'Start Node'\n  }\n}, {\n  id: 'end',\n  position: {\n    x: 300,\n    y: 200\n  },\n  data: {\n    label: 'End Node'\n  }\n}];\nconst initialEdges = [{\n  id: 'start->end',\n  type: 'custom-edge',\n  source: 'start',\n  target: 'end'\n}];\nexport default function App() {\n  _s();\n  // State for nodes and edges\n  const [nodes,, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n\n  // Function to handle adding an edge between nodes\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), [setEdges]);\n\n  // Handle click of the \"Add Edge\" button\n  const addEdgeHandler = () => {\n    const newEdge = {\n      id: 'e-start-end',\n      source: 'start',\n      // Source node ID\n      target: 'end' // Target node ID\n    };\n    setEdges(eds => [...eds, newEdge]); // Add the new edge\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100vw',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      onConnect: onConnect,\n      children: [/*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Background, {\n        variant: \"dots\",\n        gap: 12,\n        size: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addEdgeHandler,\n      style: {\n        position: 'absolute',\n        top: '20px',\n        left: '20px',\n        padding: '10px',\n        backgroundColor: '#4CAF50',\n        color: 'white',\n        border: 'none',\n        borderRadius: '5px',\n        cursor: 'pointer'\n      },\n      children: \"Add Edge\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5sL6VYJ6i6SkqlCARGhF/0pGxJ4=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useCallback","useState","ReactFlow","MiniMap","Controls","Background","useNodesState","useEdgesState","addEdge","jsxDEV","_jsxDEV","initialNodes","id","position","x","y","data","label","initialEdges","type","source","target","App","_s","nodes","onNodesChange","edges","setEdges","onEdgesChange","onConnect","params","eds","addEdgeHandler","newEdge","style","width","height","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","gap","size","onClick","top","left","padding","backgroundColor","color","border","borderRadius","cursor","_c","$RefreshReg$"],"sources":["C:/Users/arunk/Documents/Arun works/tt/frontend/src/App.js"],"sourcesContent":["import React, { useCallback, useState } from 'react';\nimport ReactFlow, {\n  MiniMap,\n  Controls,\n  Background,\n  useNodesState,\n  useEdgesState,\n  addEdge,\n} from 'react-flow-renderer';\n\nimport 'react-flow-renderer/dist/style.css';\n\nconst initialNodes = [\n  { id: 'start', position: { x: 300, y: 50 }, data: { label: 'Start Node' } },\n  { id: 'end', position: { x: 300, y: 200 }, data: { label: 'End Node' } },\n];\n\nconst initialEdges = [\n  { id: 'start->end', type: 'custom-edge', source: 'start', target: 'end' },\n];\n\nexport default function App() {\n  // State for nodes and edges\n  const [nodes, , onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n\n  // Function to handle adding an edge between nodes\n  const onConnect = useCallback(\n    (params) => setEdges((eds) => addEdge(params, eds)),\n    [setEdges]\n  );\n\n  // Handle click of the \"Add Edge\" button\n  const addEdgeHandler = () => {\n    const newEdge = {\n      id: 'e-start-end',\n      source: 'start', // Source node ID\n      target: 'end',   // Target node ID\n    };\n    setEdges((eds) => [...eds, newEdge]);  // Add the new edge\n  };\n\n  return (\n    <div style={{ width: '100vw', height: '100vh' }}>\n      <ReactFlow\n        nodes={nodes}\n        edges={edges}\n        onNodesChange={onNodesChange}\n        onEdgesChange={onEdgesChange}\n        onConnect={onConnect}\n      >\n        <Controls />\n        <MiniMap />\n        <Background variant=\"dots\" gap={12} size={1} />\n      </ReactFlow>\n\n      {/* Add Edge Button */}\n      <button\n        onClick={addEdgeHandler}\n        style={{\n          position: 'absolute',\n          top: '20px',\n          left: '20px',\n          padding: '10px',\n          backgroundColor: '#4CAF50',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: 'pointer',\n        }}\n      >\n        Add Edge\n      </button>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AACpD,OAAOC,SAAS,IACdC,OAAO,EACPC,QAAQ,EACRC,UAAU,EACVC,aAAa,EACbC,aAAa,EACbC,OAAO,QACF,qBAAqB;AAE5B,OAAO,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,YAAY,GAAG,CACnB;EAAEC,EAAE,EAAE,OAAO;EAAEC,QAAQ,EAAE;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE;EAAG,CAAC;EAAEC,IAAI,EAAE;IAAEC,KAAK,EAAE;EAAa;AAAE,CAAC,EAC3E;EAAEL,EAAE,EAAE,KAAK;EAAEC,QAAQ,EAAE;IAAEC,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE;EAAI,CAAC;EAAEC,IAAI,EAAE;IAAEC,KAAK,EAAE;EAAW;AAAE,CAAC,CACzE;AAED,MAAMC,YAAY,GAAG,CACnB;EAAEN,EAAE,EAAE,YAAY;EAAEO,IAAI,EAAE,aAAa;EAAEC,MAAM,EAAE,OAAO;EAAEC,MAAM,EAAE;AAAM,CAAC,CAC1E;AAED,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B;EACA,MAAM,CAACC,KAAK,GAAIC,aAAa,CAAC,GAAGnB,aAAa,CAACK,YAAY,CAAC;EAC5D,MAAM,CAACe,KAAK,EAAEC,QAAQ,EAAEC,aAAa,CAAC,GAAGrB,aAAa,CAACW,YAAY,CAAC;;EAEpE;EACA,MAAMW,SAAS,GAAG7B,WAAW,CAC1B8B,MAAM,IAAKH,QAAQ,CAAEI,GAAG,IAAKvB,OAAO,CAACsB,MAAM,EAAEC,GAAG,CAAC,CAAC,EACnD,CAACJ,QAAQ,CACX,CAAC;;EAED;EACA,MAAMK,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,OAAO,GAAG;MACdrB,EAAE,EAAE,aAAa;MACjBQ,MAAM,EAAE,OAAO;MAAE;MACjBC,MAAM,EAAE,KAAK,CAAI;IACnB,CAAC;IACDM,QAAQ,CAAEI,GAAG,IAAK,CAAC,GAAGA,GAAG,EAAEE,OAAO,CAAC,CAAC,CAAC,CAAE;EACzC,CAAC;EAED,oBACEvB,OAAA;IAAKwB,KAAK,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBAC9C3B,OAAA,CAACR,SAAS;MACRsB,KAAK,EAAEA,KAAM;MACbE,KAAK,EAAEA,KAAM;MACbD,aAAa,EAAEA,aAAc;MAC7BG,aAAa,EAAEA,aAAc;MAC7BC,SAAS,EAAEA,SAAU;MAAAQ,QAAA,gBAErB3B,OAAA,CAACN,QAAQ;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACZ/B,OAAA,CAACP,OAAO;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACX/B,OAAA,CAACL,UAAU;QAACqC,OAAO,EAAC,MAAM;QAACC,GAAG,EAAE,EAAG;QAACC,IAAI,EAAE;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eAGZ/B,OAAA;MACEmC,OAAO,EAAEb,cAAe;MACxBE,KAAK,EAAE;QACLrB,QAAQ,EAAE,UAAU;QACpBiC,GAAG,EAAE,MAAM;QACXC,IAAI,EAAE,MAAM;QACZC,OAAO,EAAE,MAAM;QACfC,eAAe,EAAE,SAAS;QAC1BC,KAAK,EAAE,OAAO;QACdC,MAAM,EAAE,MAAM;QACdC,YAAY,EAAE,KAAK;QACnBC,MAAM,EAAE;MACV,CAAE;MAAAhB,QAAA,EACH;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAClB,EAAA,CAtDuBD,GAAG;EAAA,QAEQhB,aAAa,EACLC,aAAa;AAAA;AAAA+C,EAAA,GAHhChC,GAAG;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}