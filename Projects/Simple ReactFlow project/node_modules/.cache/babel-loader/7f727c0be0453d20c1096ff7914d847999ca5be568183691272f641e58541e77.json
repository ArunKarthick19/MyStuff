{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arunk\\\\Documents\\\\Arun works\\\\tt\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactFlow, { MiniMap, Controls, Background, useNodesState, useEdgesState } from 'react-flow-renderer';\nimport 'react-flow-renderer/dist/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialNodes = [{\n  id: 'start',\n  position: {\n    x: 250,\n    y: 50\n  },\n  data: {\n    label: 'Start Node'\n  },\n  style: {\n    background: '#ffcc00',\n    padding: 10,\n    borderRadius: 5\n  }\n}, {\n  id: 'end',\n  position: {\n    x: 250,\n    y: 200\n  },\n  data: {\n    label: 'End Node'\n  },\n  style: {\n    background: '#66ccff',\n    padding: 10,\n    borderRadius: 5\n  }\n}];\nconst initialEdges = [];\nexport default function App() {\n  _s();\n  const [nodes,, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const [edgeCount, setEdgeCount] = useState(0); // To generate unique edge IDs\n\n  // Function to handle adding an edge dynamically\n  const addEdgeHandler = () => {\n    if (nodes.length < 2) {\n      alert('You need at least two nodes to create an edge!');\n      return;\n    }\n    const newEdge = {\n      id: `e-${edgeCount}`,\n      source: nodes[0].id,\n      // Connect the first node\n      target: nodes[1].id,\n      // Connect the second node\n      type: 'smoothstep',\n      animated: true,\n      style: {\n        stroke: '#ff6347',\n        strokeWidth: 2\n      }\n    };\n    setEdges(eds => [...eds, newEdge]);\n    setEdgeCount(edgeCount + 1); // Increment edge count for unique IDs\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100vw',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      fitView: true,\n      children: [/*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Background, {\n        variant: \"dots\",\n        gap: 12,\n        size: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addEdgeHandler,\n      style: {\n        position: 'absolute',\n        top: 100,\n        left: 10,\n        padding: '10px 20px',\n        background: '#007bff',\n        color: '#fff',\n        border: 'none',\n        borderRadius: 5,\n        cursor: 'pointer'\n      },\n      children: \"Add Edge\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IxEvQssKvhRIUKkKLGyo6sW2GZs=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ReactFlow","MiniMap","Controls","Background","useNodesState","useEdgesState","jsxDEV","_jsxDEV","initialNodes","id","position","x","y","data","label","style","background","padding","borderRadius","initialEdges","App","_s","nodes","onNodesChange","edges","setEdges","onEdgesChange","edgeCount","setEdgeCount","addEdgeHandler","length","alert","newEdge","source","target","type","animated","stroke","strokeWidth","eds","width","height","children","fitView","fileName","_jsxFileName","lineNumber","columnNumber","variant","gap","size","onClick","top","left","color","border","cursor","_c","$RefreshReg$"],"sources":["C:/Users/arunk/Documents/Arun works/tt/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactFlow, {\n  MiniMap,\n  Controls,\n  Background,\n  useNodesState,\n  useEdgesState,\n} from 'react-flow-renderer';\n\nimport 'react-flow-renderer/dist/style.css';\n\nconst initialNodes = [\n  {\n    id: 'start',\n    position: { x: 250, y: 50 },\n    data: { label: 'Start Node' },\n    style: { background: '#ffcc00', padding: 10, borderRadius: 5 },\n  },\n  {\n    id: 'end',\n    position: { x: 250, y: 200 },\n    data: { label: 'End Node' },\n    style: { background: '#66ccff', padding: 10, borderRadius: 5 },\n  },\n];\n\nconst initialEdges = [];\n\nexport default function App() {\n  const [nodes, , onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const [edgeCount, setEdgeCount] = useState(0); // To generate unique edge IDs\n\n  // Function to handle adding an edge dynamically\n  const addEdgeHandler = () => {\n    if (nodes.length < 2) {\n      alert('You need at least two nodes to create an edge!');\n      return;\n    }\n\n    const newEdge = {\n      id: `e-${edgeCount}`,\n      source: nodes[0].id, // Connect the first node\n      target: nodes[1].id, // Connect the second node\n      type: 'smoothstep',\n      animated: true,\n      style: { stroke: '#ff6347', strokeWidth: 2 },\n    };\n\n    setEdges((eds) => [...eds, newEdge]);\n    setEdgeCount(edgeCount + 1); // Increment edge count for unique IDs\n  };\n\n  return (\n    <div style={{ width: '100vw', height: '100vh' }}>\n      <ReactFlow\n        nodes={nodes}\n        edges={edges}\n        onNodesChange={onNodesChange}\n        onEdgesChange={onEdgesChange}\n        fitView\n      >\n        <Controls />\n        <MiniMap />\n        <Background variant=\"dots\" gap={12} size={1} />\n      </ReactFlow>\n\n      {/* Add Button */}\n      <button\n        onClick={addEdgeHandler}\n        style={{\n          position: 'absolute',\n          top: 100,\n          left: 10,\n          padding: '10px 20px',\n          background: '#007bff',\n          color: '#fff',\n          border: 'none',\n          borderRadius: 5,\n          cursor: 'pointer',\n        }}\n      >\n        Add Edge\n      </button>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}