{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arunk\\\\Documents\\\\Arun works\\\\tt\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useRef } from 'react';\nimport ReactFlow, { MiniMap, Controls, Background, useNodesState, useEdgesState, addEdge, Panel } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { Handle, Position } from 'reactflow';\n\n// Custom node types\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nodeTypes = {\n  start: ({\n    data,\n    id\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '15px',\n      borderRadius: '8px',\n      background: '#e6f7ff',\n      border: '1px solid #1890ff',\n      width: '180px',\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Handle, {\n      type: \"source\",\n      position: Position.Bottom,\n      id: \"source\",\n      style: {\n        background: '#1890ff',\n        width: '10px',\n        height: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        marginBottom: '8px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '30px',\n          height: '30px',\n          borderRadius: '50%',\n          background: '#e6f7ff',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          marginRight: '10px',\n          border: '1px solid #1890ff'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontWeight: 'bold'\n        },\n        children: \" \\uD83D\\uDE80 Start Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.label || 'Start'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this),\n  action: ({\n    data,\n    id\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '15px',\n      borderRadius: '8px',\n      background: '#f0f5ff',\n      border: '1px solid #597ef7',\n      width: '180px',\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Handle, {\n      type: \"target\",\n      position: Position.Top,\n      id: \"target\",\n      style: {\n        background: '#597ef7',\n        width: '10px',\n        height: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Handle, {\n      type: \"source\",\n      position: Position.Bottom,\n      id: \"source\",\n      style: {\n        background: '#597ef7',\n        width: '10px',\n        height: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        marginBottom: '8px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '30px',\n          height: '30px',\n          borderRadius: '50%',\n          background: '#f0f5ff',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          marginRight: '10px',\n          border: '1px solid #597ef7'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"action\",\n          children: \"\\u2699\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontWeight: 'bold'\n        },\n        children: \"Action Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.label || 'Action'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this),\n  ifelse: ({\n    data,\n    id\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '15px',\n      borderRadius: '8px',\n      background: '#fff7e6',\n      border: '1px solid #ffc53d',\n      width: '180px',\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Handle, {\n      type: \"target\",\n      position: Position.Top,\n      id: \"target\",\n      style: {\n        background: '#ffc53d',\n        width: '10px',\n        height: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Handle, {\n      type: \"source\",\n      position: Position.Bottom,\n      id: \"source\",\n      style: {\n        background: '#ffc53d',\n        width: '10px',\n        height: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        marginBottom: '8px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '30px',\n          height: '30px',\n          borderRadius: '50%',\n          background: '#fff7e6',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          marginRight: '10px',\n          border: '1px solid #ffc53d'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"if-else\",\n          children: \"\\uD83D\\uDD00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontWeight: 'bold'\n        },\n        children: \"If / Else\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.label || 'If / Else'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this),\n  end: ({\n    data,\n    id\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '15px',\n      borderRadius: '8px',\n      background: '#f9f0ff',\n      border: '1px solid #9254de',\n      width: '180px',\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Handle, {\n      type: \"target\",\n      position: Position.Top,\n      id: \"target\",\n      style: {\n        background: '#9254de',\n        width: '10px',\n        height: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        marginBottom: '8px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '30px',\n          height: '30px',\n          borderRadius: '50%',\n          background: '#f9f0ff',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          marginRight: '10px',\n          border: '1px solid #9254de'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"end\",\n          children: \"\\uD83C\\uDFC1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontWeight: 'bold'\n        },\n        children: \"End Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.label || 'END'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this),\n  branch: ({\n    data,\n    id\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '10px',\n      borderRadius: '8px',\n      background: '#f5f5f5',\n      border: '1px solid #d9d9d9',\n      width: '120px',\n      textAlign: 'center',\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Handle, {\n      type: \"target\",\n      position: Position.Top,\n      id: \"target\",\n      style: {\n        background: '#d9d9d9',\n        width: '10px',\n        height: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Handle, {\n      type: \"source\",\n      position: Position.Bottom,\n      id: \"source\",\n      style: {\n        background: '#d9d9d9',\n        width: '10px',\n        height: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.label || 'Branch'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this)\n};\nconst initialNodes = [{\n  id: 'start',\n  type: 'start',\n  position: {\n    x: 300,\n    y: 50\n  },\n  data: {\n    label: 'Start'\n  }\n}, {\n  id: 'end',\n  type: 'end',\n  position: {\n    x: 300,\n    y: 250\n  },\n  data: {\n    label: 'END'\n  }\n}];\nconst initialEdges = [{\n  id: 'start->end',\n  source: 'start',\n  target: 'end',\n  type: 'smoothstep',\n  sourceHandle: 'source',\n  targetHandle: 'target'\n}];\nexport default function App() {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const [nodeCount, setNodeCount] = useState(1); // For unique node IDs\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [showNodeMenu, setShowNodeMenu] = useState(false);\n  const [menuPosition, setMenuPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [clickedEdgeId, setClickedEdgeId] = useState(null);\n  const [showNodeForm, setShowNodeForm] = useState(false);\n  const [nodeFormData, setNodeFormData] = useState({\n    name: '',\n    type: ''\n  });\n  const [branchCount, setBranchCount] = useState(1);\n  const [showAddNodeMenu, setShowAddNodeMenu] = useState(false);\n  const reactFlowWrapper = useRef(null);\n\n  // Handle node click\n  const onNodeClick = (event, node) => {\n    event.stopPropagation();\n    setSelectedNode(node);\n    setNodeFormData({\n      id: node.id,\n      name: node.data.label,\n      type: node.type,\n      branches: node.data.branches || []\n    });\n    setShowNodeForm(true);\n  };\n\n  // Handle background click to close forms\n  const onPaneClick = () => {\n    setSelectedNode(null);\n    setShowNodeForm(false);\n    setShowNodeMenu(false);\n    setShowAddNodeMenu(false);\n  };\n\n  // Handle edge click to show add node menu\n  const onEdgeClick = (event, edge) => {\n    event.preventDefault();\n    setClickedEdgeId(edge.id);\n\n    // Calculate position for the node menu\n    const sourceNode = nodes.find(node => node.id === edge.source);\n    const targetNode = nodes.find(node => node.id === edge.target);\n    if (sourceNode && targetNode) {\n      const x = (sourceNode.position.x + targetNode.position.x) / 2;\n      const y = (sourceNode.position.y + targetNode.position.y) / 2;\n      setMenuPosition({\n        x,\n        y\n      });\n      setShowNodeMenu(true);\n    }\n  };\n\n  // Add a new node between two existing nodes\n  const addNodeBetween = nodeType => {\n    if (!clickedEdgeId) return;\n    const edge = edges.find(e => e.id === clickedEdgeId);\n    if (!edge) return;\n    const sourceNode = nodes.find(node => node.id === edge.source);\n    const targetNode = nodes.find(node => node.id === edge.target);\n    if (!sourceNode || !targetNode) return;\n\n    // Calculate position for the new node\n    const newNodePosition = {\n      x: (sourceNode.position.x + targetNode.position.x) / 2,\n      y: (sourceNode.position.y + targetNode.position.y) / 2\n    };\n    const newNodeId = `${nodeType}-${nodeCount}`;\n    let newNode = {\n      id: newNodeId,\n      type: nodeType,\n      position: newNodePosition,\n      data: {\n        label: nodeType === 'action' ? 'Action Node' : 'If / Else'\n      }\n    };\n\n    // If it's an if/else node, add default branches\n    if (nodeType === 'ifelse') {\n      newNode.data.branches = [{\n        id: 'branch-1',\n        name: 'Branch #1'\n      }];\n\n      // Create action nodes for each branch\n      const actionNodes = [{\n        id: `${newNodeId}-branch-1-action`,\n        type: 'action',\n        position: {\n          x: newNodePosition.x - 150,\n          y: newNodePosition.y + 100\n        },\n        data: {\n          label: 'Branch #1 Action'\n        }\n      }, {\n        id: `${newNodeId}-else-action`,\n        type: 'action',\n        position: {\n          x: newNodePosition.x,\n          y: newNodePosition.y + 100\n        },\n        data: {\n          label: 'Else Action'\n        }\n      }];\n\n      // Create an end node for the else branch\n      const elseEndNode = {\n        id: `${newNodeId}-else-end`,\n        type: 'end',\n        position: {\n          x: newNodePosition.x,\n          y: newNodePosition.y + 300\n        },\n        data: {\n          label: 'END'\n        }\n      };\n\n      // Create branch edges\n      const branchEdges = [\n      // Connect if/else directly to actions\n      {\n        id: `${newNodeId}-to-branch-1-action`,\n        source: newNodeId,\n        target: `${newNodeId}-branch-1-action`,\n        type: 'smoothstep',\n        sourceHandle: 'source',\n        targetHandle: 'target'\n      }, {\n        id: `${newNodeId}-to-else-action`,\n        source: newNodeId,\n        target: `${newNodeId}-else-action`,\n        type: 'smoothstep',\n        sourceHandle: 'source',\n        targetHandle: 'target'\n      },\n      // Connect branch #1 action to target\n      {\n        id: `${newNodeId}-branch-1-action-to-target`,\n        source: `${newNodeId}-branch-1-action`,\n        target: edge.target,\n        type: 'smoothstep',\n        sourceHandle: 'source',\n        targetHandle: 'target'\n      },\n      // Connect else action to its own end node\n      {\n        id: `${newNodeId}-else-action-to-end`,\n        source: `${newNodeId}-else-action`,\n        target: `${newNodeId}-else-end`,\n        type: 'smoothstep',\n        sourceHandle: 'source',\n        targetHandle: 'target'\n      }];\n\n      // Add all nodes and edges\n      setNodes(nds => [...nds, newNode, ...actionNodes, elseEndNode]);\n      setEdges(eds => {\n        // Remove the original edge\n        const filteredEdges = eds.filter(e => e.id !== clickedEdgeId);\n\n        // Add new edges\n        return [...filteredEdges, {\n          id: `${edge.source}-${newNodeId}`,\n          source: edge.source,\n          target: newNodeId,\n          type: 'smoothstep',\n          sourceHandle: 'source',\n          targetHandle: 'target'\n        }, ...branchEdges];\n      });\n    } else {\n      // For action nodes\n      setNodes(nds => [...nds, newNode]);\n\n      // Update edges\n      setEdges(eds => {\n        // Remove the original edge\n        const filteredEdges = eds.filter(e => e.id !== clickedEdgeId);\n\n        // Add new edges\n        return [...filteredEdges, {\n          id: `${edge.source}-${newNodeId}`,\n          source: edge.source,\n          target: newNodeId,\n          type: 'smoothstep',\n          sourceHandle: 'source',\n          targetHandle: 'target'\n        }, {\n          id: `${newNodeId}-${edge.target}`,\n          source: newNodeId,\n          target: edge.target,\n          type: 'smoothstep',\n          sourceHandle: 'source',\n          targetHandle: 'target'\n        }];\n      });\n    }\n    setNodeCount(nodeCount + 1);\n    setShowNodeMenu(false);\n  };\n\n  // Show the Add Node menu\n  const showAddNodeMenuHandler = () => {\n    setMenuPosition({\n      x: 100,\n      y: 100\n    }); // Position near the Add Node button\n    setShowAddNodeMenu(true);\n  };\n\n  // Add a new action node directly from the Add Node button\n  const addActionNode = () => {\n    const newNodeId = `action-${nodeCount}`;\n\n    // Find the last node before the end node\n    let lastNodeBeforeEnd = 'start';\n    let lastNodeY = 50; // Default Y position of start node\n\n    // Find all edges that connect to the end node\n    const endEdges = edges.filter(edge => edge.target === 'end');\n    if (endEdges.length > 0) {\n      // Get the source node of the edge connecting to end\n      lastNodeBeforeEnd = endEdges[0].source;\n      const lastNode = nodes.find(node => node.id === lastNodeBeforeEnd);\n      if (lastNode) {\n        lastNodeY = lastNode.position.y;\n      }\n    }\n\n    // Calculate position for the new node\n    const newNodePosition = {\n      x: 300,\n      // Keep X position consistent\n      y: lastNodeY + 150 // Position below the last node\n    };\n\n    // Create the new node\n    const newNode = {\n      id: newNodeId,\n      type: 'action',\n      position: newNodePosition,\n      data: {\n        label: 'Action Node'\n      }\n    };\n\n    // Add the new node\n    setNodes(nds => [...nds, newNode]);\n\n    // Remove the edge connecting to end\n    setEdges(eds => {\n      // Filter out the edge connecting to end\n      const filteredEdges = eds.filter(edge => !(edge.source === lastNodeBeforeEnd && edge.target === 'end'));\n\n      // Add new edges\n      return [...filteredEdges, {\n        id: `${lastNodeBeforeEnd}-${newNodeId}`,\n        source: lastNodeBeforeEnd,\n        target: newNodeId,\n        type: 'smoothstep',\n        sourceHandle: 'source',\n        targetHandle: 'target'\n      }, {\n        id: `${newNodeId}-end`,\n        source: newNodeId,\n        target: 'end',\n        type: 'smoothstep',\n        sourceHandle: 'source',\n        targetHandle: 'target'\n      }];\n    });\n    setNodeCount(nodeCount + 1);\n    setShowAddNodeMenu(false);\n  };\n\n  // Add a new if/else node directly from the Add Node button\n  const addIfElseNode = () => {\n    const newNodeId = `ifelse-${nodeCount}`;\n\n    // Find the last node before the end node\n    let lastNodeBeforeEnd = 'start';\n    let lastNodeY = 50; // Default Y position of start node\n\n    // Find all edges that connect to the end node\n    const endEdges = edges.filter(edge => edge.target === 'end');\n    if (endEdges.length > 0) {\n      // Get the source node of the edge connecting to end\n      lastNodeBeforeEnd = endEdges[0].source;\n      const lastNode = nodes.find(node => node.id === lastNodeBeforeEnd);\n      if (lastNode) {\n        lastNodeY = lastNode.position.y;\n      }\n    }\n\n    // Calculate position for the new node\n    const newNodePosition = {\n      x: 300,\n      // Keep X position consistent\n      y: lastNodeY + 150 // Position below the last node\n    };\n\n    // Create the new if/else node\n    const newNode = {\n      id: newNodeId,\n      type: 'ifelse',\n      position: newNodePosition,\n      data: {\n        label: 'If / Else',\n        branches: [{\n          id: 'branch-1',\n          name: 'Branch #1'\n        }]\n      }\n    };\n\n    // Create action nodes for each branch\n    const actionNodes = [{\n      id: `${newNodeId}-branch-1-action`,\n      type: 'action',\n      position: {\n        x: newNodePosition.x - 150,\n        y: newNodePosition.y + 100\n      },\n      data: {\n        label: 'Branch #1 Action'\n      }\n    }, {\n      id: `${newNodeId}-else-action`,\n      type: 'action',\n      position: {\n        x: newNodePosition.x,\n        y: newNodePosition.y + 100\n      },\n      data: {\n        label: 'Else Action'\n      }\n    }];\n\n    // Create an end node for the else branch\n    const elseEndNode = {\n      id: `${newNodeId}-else-end`,\n      type: 'end',\n      position: {\n        x: newNodePosition.x,\n        y: newNodePosition.y + 300\n      },\n      data: {\n        label: 'END'\n      }\n    };\n\n    // Create branch edges\n    const branchEdges = [\n    // Connect if/else directly to actions\n    {\n      id: `${newNodeId}-to-branch-1-action`,\n      source: newNodeId,\n      target: `${newNodeId}-branch-1-action`,\n      type: 'smoothstep',\n      sourceHandle: 'source',\n      targetHandle: 'target'\n    }, {\n      id: `${newNodeId}-to-else-action`,\n      source: newNodeId,\n      target: `${newNodeId}-else-action`,\n      type: 'smoothstep',\n      sourceHandle: 'source',\n      targetHandle: 'target'\n    },\n    // Connect branch #1 action to main end\n    {\n      id: `${newNodeId}-branch-1-action-to-end`,\n      source: `${newNodeId}-branch-1-action`,\n      target: 'end',\n      type: 'smoothstep',\n      sourceHandle: 'source',\n      targetHandle: 'target'\n    },\n    // Connect else action to its own end node\n    {\n      id: `${newNodeId}-else-action-to-end`,\n      source: `${newNodeId}-else-action`,\n      target: `${newNodeId}-else-end`,\n      type: 'smoothstep',\n      sourceHandle: 'source',\n      targetHandle: 'target'\n    }];\n\n    // Connect the last node to the if/else node\n    const connectToIfElseEdge = {\n      id: `${lastNodeBeforeEnd}-${newNodeId}`,\n      source: lastNodeBeforeEnd,\n      target: newNodeId,\n      type: 'smoothstep',\n      sourceHandle: 'source',\n      targetHandle: 'target'\n    };\n\n    // Add all nodes\n    setNodes(nds => [...nds, newNode, ...actionNodes, elseEndNode]);\n\n    // Update edges\n    setEdges(eds => {\n      // Filter out the edge connecting to end\n      const filteredEdges = eds.filter(edge => !(edge.source === lastNodeBeforeEnd && edge.target === 'end'));\n\n      // Add new edges\n      return [...filteredEdges, connectToIfElseEdge, ...branchEdges];\n    });\n    setNodeCount(nodeCount + 1);\n    setShowAddNodeMenu(false);\n  };\n\n  // Add a new branch to an if/else node\n  const addBranch = () => {\n    if (!selectedNode || selectedNode.type !== 'ifelse') return;\n    const newBranchId = `branch-${nodeFormData.branches.length + 1}`;\n    const newBranch = {\n      id: newBranchId,\n      name: `Branch #${nodeFormData.branches.length + 1}`\n    };\n    setNodeFormData({\n      ...nodeFormData,\n      branches: [...nodeFormData.branches, newBranch]\n    });\n    setBranchCount(branchCount + 1);\n  };\n\n  // Remove a branch from an if/else node\n  const removeBranch = branchId => {\n    if (!selectedNode || selectedNode.type !== 'ifelse') return;\n    setNodeFormData({\n      ...nodeFormData,\n      branches: nodeFormData.branches.filter(branch => branch.id !== branchId)\n    });\n  };\n\n  // Update branch name\n  const updateBranchName = (branchId, newName) => {\n    if (!selectedNode || selectedNode.type !== 'ifelse') return;\n    setNodeFormData({\n      ...nodeFormData,\n      branches: nodeFormData.branches.map(branch => branch.id === branchId ? {\n        ...branch,\n        name: newName\n      } : branch)\n    });\n  };\n\n  // Handle form submission for node editing\n  const handleNodeFormSubmit = e => {\n    e.preventDefault();\n    if (!selectedNode) return;\n\n    // Update node data\n    setNodes(nds => nds.map(node => {\n      if (node.id === selectedNode.id) {\n        // For if/else nodes, update branch names too\n        if (node.type === 'ifelse') {\n          // Update branch label nodes\n          const updatedNode = {\n            ...node,\n            data: {\n              ...node.data,\n              label: nodeFormData.name,\n              branches: nodeFormData.branches\n            }\n          };\n          return updatedNode;\n        }\n\n        // For other node types\n        return {\n          ...node,\n          data: {\n            ...node.data,\n            label: nodeFormData.name\n          }\n        };\n      } else if (selectedNode.type === 'ifelse' && node.id.includes('branch') && node.id.startsWith(selectedNode.id.split('-')[0])) {\n        // Update branch label nodes\n        const branchIndex = parseInt(node.id.split('-')[1]) - 1;\n        if (branchIndex >= 0 && branchIndex < nodeFormData.branches.length) {\n          return {\n            ...node,\n            data: {\n              ...node.data,\n              label: nodeFormData.branches[branchIndex].name\n            }\n          };\n        }\n      }\n      return node;\n    }));\n    setShowNodeForm(false);\n    setSelectedNode(null);\n  };\n\n  // Handle node deletion\n  const deleteNode = () => {\n    if (!selectedNode || selectedNode.id === 'start' || selectedNode.id === 'end') return;\n\n    // Find incoming and outgoing edges\n    const incomingEdges = edges.filter(edge => edge.target === selectedNode.id);\n    const outgoingEdges = edges.filter(edge => edge.source === selectedNode.id);\n\n    // For if/else nodes, we need to handle differently\n    if (selectedNode.type === 'ifelse') {\n      // Find all related nodes (branch nodes, action nodes, end nodes)\n      const relatedNodes = nodes.filter(node => node.id.includes(selectedNode.id) || node.id.includes('branch') && node.id.includes(selectedNode.id.split('-')[1]) || node.id.includes(`${selectedNode.id}-else-end`));\n      const relatedNodeIds = relatedNodes.map(node => node.id);\n\n      // Find all edges connected to related nodes\n      const relatedEdges = edges.filter(edge => relatedNodeIds.includes(edge.source) || relatedNodeIds.includes(edge.target) || edge.source === selectedNode.id || edge.target === selectedNode.id);\n\n      // Remove the if/else node and all related nodes\n      setNodes(nds => nds.filter(node => node.id !== selectedNode.id && !relatedNodeIds.includes(node.id)));\n\n      // Remove all edges connected to this node and related nodes\n      setEdges(eds => {\n        const filteredEdges = eds.filter(edge => !relatedEdges.some(re => re.id === edge.id));\n\n        // Connect the incoming node to the next node or end\n        if (incomingEdges.length > 0) {\n          // Connect the incoming node directly to the end node\n          filteredEdges.push({\n            id: `${incomingEdges[0].source}-end`,\n            source: incomingEdges[0].source,\n            target: 'end',\n            type: 'smoothstep',\n            sourceHandle: 'source',\n            targetHandle: 'target'\n          });\n        } else {\n          // If no incoming edges (unlikely), ensure start is connected to end\n          const hasStartToEndEdge = filteredEdges.some(edge => edge.source === 'start' && edge.target === 'end');\n          if (!hasStartToEndEdge) {\n            filteredEdges.push({\n              id: 'start-end',\n              source: 'start',\n              target: 'end',\n              type: 'smoothstep',\n              sourceHandle: 'source',\n              targetHandle: 'target'\n            });\n          }\n        }\n        return filteredEdges;\n      });\n    } else {\n      // For regular action nodes\n      // Remove just this node\n      setNodes(nds => nds.filter(node => node.id !== selectedNode.id));\n\n      // Remove edges connected to this node and reconnect\n      setEdges(eds => {\n        const filteredEdges = eds.filter(edge => edge.source !== selectedNode.id && edge.target !== selectedNode.id);\n\n        // If there were both incoming and outgoing edges, connect them\n        if (incomingEdges.length > 0 && outgoingEdges.length > 0) {\n          filteredEdges.push({\n            id: `${incomingEdges[0].source}-${outgoingEdges[0].target}`,\n            source: incomingEdges[0].source,\n            target: outgoingEdges[0].target,\n            type: 'smoothstep',\n            sourceHandle: 'source',\n            targetHandle: 'target'\n          });\n        } else if (incomingEdges.length > 0) {\n          // If only incoming edges, connect to end\n          filteredEdges.push({\n            id: `${incomingEdges[0].source}-end`,\n            source: incomingEdges[0].source,\n            target: 'end',\n            type: 'smoothstep',\n            sourceHandle: 'source',\n            targetHandle: 'target'\n          });\n        } else if (outgoingEdges.length > 0) {\n          // If only outgoing edges, connect start to the target\n          filteredEdges.push({\n            id: `start-${outgoingEdges[0].target}`,\n            source: 'start',\n            target: outgoingEdges[0].target,\n            type: 'smoothstep',\n            sourceHandle: 'source',\n            targetHandle: 'target'\n          });\n        } else {\n          // If no edges at all, ensure start is connected to end\n          const hasStartToEndEdge = filteredEdges.some(edge => edge.source === 'start' && edge.target === 'end');\n          if (!hasStartToEndEdge) {\n            filteredEdges.push({\n              id: 'start-end',\n              source: 'start',\n              target: 'end',\n              type: 'smoothstep',\n              sourceHandle: 'source',\n              targetHandle: 'target'\n            });\n          }\n        }\n        return filteredEdges;\n      });\n    }\n    setShowNodeForm(false);\n    setSelectedNode(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100vw',\n      height: '100vh'\n    },\n    ref: reactFlowWrapper,\n    children: [/*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      onNodeClick: onNodeClick,\n      onEdgeClick: onEdgeClick,\n      onPaneClick: onPaneClick,\n      nodeTypes: nodeTypes,\n      fitView: true,\n      children: [/*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 892,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 893,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Background, {\n        variant: \"dots\",\n        gap: 12,\n        size: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 894,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Panel, {\n        position: \"top-left\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '10px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: showAddNodeMenuHandler,\n            style: {\n              padding: '10px',\n              backgroundColor: '#1890ff',\n              color: 'white',\n              border: 'none',\n              borderRadius: '5px',\n              cursor: 'pointer'\n            },\n            children: \"Add Node\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 898,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 897,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 896,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 881,\n      columnNumber: 7\n    }, this), showNodeMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: `${menuPosition.y}px`,\n        left: `${menuPosition.x}px`,\n        backgroundColor: 'white',\n        padding: '10px',\n        borderRadius: '5px',\n        boxShadow: '0 0 10px rgba(0,0,0,0.2)',\n        zIndex: 1000,\n        transform: 'translate(-50%, -50%)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px',\n          fontWeight: 'bold'\n        },\n        children: \"Add Node:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 930,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addNodeBetween('action'),\n          style: {\n            padding: '8px 12px',\n            backgroundColor: '#1890ff',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer'\n          },\n          children: \"Action Node\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 932,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addNodeBetween('ifelse'),\n          style: {\n            padding: '8px 12px',\n            backgroundColor: '#ffc53d',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer'\n          },\n          children: \"If / Else Node\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 945,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 931,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 917,\n      columnNumber: 9\n    }, this), showAddNodeMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: `${menuPosition.y}px`,\n        left: `${menuPosition.x}px`,\n        backgroundColor: 'white',\n        padding: '10px',\n        borderRadius: '5px',\n        boxShadow: '0 0 10px rgba(0,0,0,0.2)',\n        zIndex: 1000,\n        transform: 'translate(-50%, -50%)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px',\n          fontWeight: 'bold'\n        },\n        children: \"Add Node:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 977,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addActionNode,\n          style: {\n            padding: '8px 12px',\n            backgroundColor: '#1890ff',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer'\n          },\n          children: \"Action Node\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 979,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addIfElseNode,\n          style: {\n            padding: '8px 12px',\n            backgroundColor: '#ffc53d',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer'\n          },\n          children: \"If / Else Node\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 992,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 978,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 964,\n      columnNumber: 9\n    }, this), showNodeForm && selectedNode && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        backgroundColor: 'white',\n        padding: '20px',\n        borderRadius: '5px',\n        boxShadow: '0 0 10px rgba(0,0,0,0.2)',\n        zIndex: 1000,\n        transform: 'translate(-50%, -50%)',\n        minWidth: '300px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginTop: 0\n        },\n        children: \"Edit Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1025,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleNodeFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '15px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '5px'\n            },\n            children: \"Node Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1028,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: nodeFormData.name,\n            onChange: e => setNodeFormData({\n              ...nodeFormData,\n              name: e.target.value\n            }),\n            style: {\n              width: '100%',\n              padding: '8px',\n              borderRadius: '4px',\n              border: '1px solid #d9d9d9'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1029,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1027,\n          columnNumber: 13\n        }, this), selectedNode.type === 'ifelse' && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '15px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '5px'\n            },\n            children: \"Branches:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1044,\n            columnNumber: 17\n          }, this), nodeFormData.branches.map((branch, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              marginBottom: '5px',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: branch.name,\n              onChange: e => updateBranchName(branch.id, e.target.value),\n              style: {\n                flex: 1,\n                padding: '8px',\n                borderRadius: '4px',\n                border: '1px solid #d9d9d9',\n                marginRight: '5px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1047,\n              columnNumber: 21\n            }, this), index > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => removeBranch(branch.id),\n              style: {\n                padding: '8px',\n                backgroundColor: '#ff4d4f',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px',\n                cursor: 'pointer'\n              },\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1060,\n              columnNumber: 23\n            }, this)]\n          }, branch.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1046,\n            columnNumber: 19\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: addBranch,\n            style: {\n              padding: '8px',\n              backgroundColor: '#52c41a',\n              color: 'white',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              marginTop: '5px'\n            },\n            children: \"Add Branch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1077,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1043,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            style: {\n              padding: '10px',\n              backgroundColor: '#1890ff',\n              color: 'white',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer'\n            },\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1096,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: deleteNode,\n            style: {\n              padding: '10px',\n              backgroundColor: '#ff4d4f',\n              color: 'white',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer'\n            },\n            children: \"Delete Node\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => {\n              setShowNodeForm(false);\n              setSelectedNode(null);\n            },\n            style: {\n              padding: '10px',\n              backgroundColor: '#d9d9d9',\n              color: 'black',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer'\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1123,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1095,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1026,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1011,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 880,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Xs/XlA1ZjChBWrSAgR+hu7A9Iw0=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","useRef","ReactFlow","MiniMap","Controls","Background","useNodesState","useEdgesState","addEdge","Panel","Handle","Position","jsxDEV","_jsxDEV","nodeTypes","start","data","id","style","padding","borderRadius","background","border","width","position","children","type","Bottom","height","fileName","_jsxFileName","lineNumber","columnNumber","display","alignItems","marginBottom","justifyContent","marginRight","fontWeight","label","action","Top","role","ifelse","end","branch","textAlign","initialNodes","x","y","initialEdges","source","target","sourceHandle","targetHandle","App","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","nodeCount","setNodeCount","selectedNode","setSelectedNode","showNodeMenu","setShowNodeMenu","menuPosition","setMenuPosition","clickedEdgeId","setClickedEdgeId","showNodeForm","setShowNodeForm","nodeFormData","setNodeFormData","name","branchCount","setBranchCount","showAddNodeMenu","setShowAddNodeMenu","reactFlowWrapper","onNodeClick","event","node","stopPropagation","branches","onPaneClick","onEdgeClick","edge","preventDefault","sourceNode","find","targetNode","addNodeBetween","nodeType","e","newNodePosition","newNodeId","newNode","actionNodes","elseEndNode","branchEdges","nds","eds","filteredEdges","filter","showAddNodeMenuHandler","addActionNode","lastNodeBeforeEnd","lastNodeY","endEdges","length","lastNode","addIfElseNode","connectToIfElseEdge","addBranch","newBranchId","newBranch","removeBranch","branchId","updateBranchName","newName","map","handleNodeFormSubmit","updatedNode","includes","startsWith","split","branchIndex","parseInt","deleteNode","incomingEdges","outgoingEdges","relatedNodes","relatedNodeIds","relatedEdges","some","re","push","hasStartToEndEdge","ref","fitView","variant","gap","size","onClick","backgroundColor","color","cursor","top","left","boxShadow","zIndex","transform","minWidth","marginTop","onSubmit","value","onChange","index","flex","_c","$RefreshReg$"],"sources":["C:/Users/arunk/Documents/Arun works/tt/frontend/src/App.js"],"sourcesContent":["import React, { useState, useCallback, useRef } from 'react';\nimport ReactFlow, {\n  MiniMap,\n  Controls,\n  Background,\n  useNodesState,\n  useEdgesState,\n  addEdge,\n  Panel,\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\n\nimport { Handle, Position } from 'reactflow';\n\n// Custom node types\nconst nodeTypes = {\n  start: ({ data, id }) => (\n    <div style={{\n      padding: '15px',\n      borderRadius: '8px',\n      background: '#e6f7ff',\n      border: '1px solid #1890ff',\n      width: '180px',\n      position: 'relative',\n    }}>\n      <Handle\n        type=\"source\"\n        position={Position.Bottom}\n        id=\"source\"\n        style={{ background: '#1890ff', width: '10px', height: '10px' }}\n      />\n      <div style={{ display: 'flex', alignItems: 'center', marginBottom: '8px' }}>\n        <div style={{ \n          width: '30px', \n          height: '30px', \n          borderRadius: '50%', \n          background: '#e6f7ff', \n          display: 'flex', \n          alignItems: 'center', \n          justifyContent: 'center',\n          marginRight: '10px',\n          border: '1px solid #1890ff'\n        }}>\n          {/* <span role=\"img\" aria-label=\"start\">🚀</span> */}\n        </div>\n        <div style={{ fontWeight: 'bold' }}> 🚀 Start Node</div>\n      </div>\n      <div>{data.label || 'Start'}</div>\n    </div>\n  ),\n  action: ({ data, id }) => (\n    <div style={{\n      padding: '15px',\n      borderRadius: '8px',\n      background: '#f0f5ff',\n      border: '1px solid #597ef7',\n      width: '180px',\n      position: 'relative',\n    }}>\n      <Handle\n        type=\"target\"\n        position={Position.Top}\n        id=\"target\"\n        style={{ background: '#597ef7', width: '10px', height: '10px' }}\n      />\n      <Handle\n        type=\"source\"\n        position={Position.Bottom}\n        id=\"source\"\n        style={{ background: '#597ef7', width: '10px', height: '10px' }}\n      />\n      <div style={{ display: 'flex', alignItems: 'center', marginBottom: '8px' }}>\n        <div style={{ \n          width: '30px', \n          height: '30px', \n          borderRadius: '50%', \n          background: '#f0f5ff', \n          display: 'flex', \n          alignItems: 'center', \n          justifyContent: 'center',\n          marginRight: '10px',\n          border: '1px solid #597ef7'\n        }}>\n          <span role=\"img\" aria-label=\"action\">⚙️</span>\n        </div>\n        <div style={{ fontWeight: 'bold' }}>Action Node</div>\n      </div>\n      <div>{data.label || 'Action'}</div>\n    </div>\n  ),\n  ifelse: ({ data, id }) => (\n    <div style={{\n      padding: '15px',\n      borderRadius: '8px',\n      background: '#fff7e6',\n      border: '1px solid #ffc53d',\n      width: '180px',\n      position: 'relative',\n    }}>\n      <Handle\n        type=\"target\"\n        position={Position.Top}\n        id=\"target\"\n        style={{ background: '#ffc53d', width: '10px', height: '10px' }}\n      />\n      <Handle\n        type=\"source\"\n        position={Position.Bottom}\n        id=\"source\"\n        style={{ background: '#ffc53d', width: '10px', height: '10px' }}\n      />\n      <div style={{ display: 'flex', alignItems: 'center', marginBottom: '8px' }}>\n        <div style={{ \n          width: '30px', \n          height: '30px', \n          borderRadius: '50%', \n          background: '#fff7e6', \n          display: 'flex', \n          alignItems: 'center', \n          justifyContent: 'center',\n          marginRight: '10px',\n          border: '1px solid #ffc53d'\n        }}>\n          <span role=\"img\" aria-label=\"if-else\">🔀</span>\n        </div>\n        <div style={{ fontWeight: 'bold' }}>If / Else</div>\n      </div>\n      <div>{data.label || 'If / Else'}</div>\n    </div>\n  ),\n  end: ({ data, id }) => (\n    <div style={{\n      padding: '15px',\n      borderRadius: '8px',\n      background: '#f9f0ff',\n      border: '1px solid #9254de',\n      width: '180px',\n      position: 'relative',\n    }}>\n      <Handle\n        type=\"target\"\n        position={Position.Top}\n        id=\"target\"\n        style={{ background: '#9254de', width: '10px', height: '10px' }}\n      />\n      <div style={{ display: 'flex', alignItems: 'center', marginBottom: '8px' }}>\n        <div style={{ \n          width: '30px', \n          height: '30px', \n          borderRadius: '50%', \n          background: '#f9f0ff', \n          display: 'flex', \n          alignItems: 'center', \n          justifyContent: 'center',\n          marginRight: '10px',\n          border: '1px solid #9254de'\n        }}>\n          <span role=\"img\" aria-label=\"end\">🏁</span>\n        </div>\n        <div style={{ fontWeight: 'bold' }}>End Node</div>\n      </div>\n      <div>{data.label || 'END'}</div>\n    </div>\n  ),\n  branch: ({ data, id }) => (\n    <div style={{\n      padding: '10px',\n      borderRadius: '8px',\n      background: '#f5f5f5',\n      border: '1px solid #d9d9d9',\n      width: '120px',\n      textAlign: 'center',\n      position: 'relative',\n    }}>\n      <Handle\n        type=\"target\"\n        position={Position.Top}\n        id=\"target\"\n        style={{ background: '#d9d9d9', width: '10px', height: '10px' }}\n      />\n      <Handle\n        type=\"source\"\n        position={Position.Bottom}\n        id=\"source\"\n        style={{ background: '#d9d9d9', width: '10px', height: '10px' }}\n      />\n      <div>{data.label || 'Branch'}</div>\n    </div>\n  ),\n};\n\nconst initialNodes = [\n  {\n    id: 'start',\n    type: 'start',\n    position: { x: 300, y: 50 },\n    data: { label: 'Start' },\n  },\n  {\n    id: 'end',\n    type: 'end',\n    position: { x: 300, y: 250 },\n    data: { label: 'END' },\n  },\n];\n\nconst initialEdges = [\n  { \n    id: 'start->end', \n    source: 'start', \n    target: 'end', \n    type: 'smoothstep',\n    sourceHandle: 'source',\n    targetHandle: 'target'\n  },\n];\n\nexport default function App() {\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const [nodeCount, setNodeCount] = useState(1); // For unique node IDs\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [showNodeMenu, setShowNodeMenu] = useState(false);\n  const [menuPosition, setMenuPosition] = useState({ x: 0, y: 0 });\n  const [clickedEdgeId, setClickedEdgeId] = useState(null);\n  const [showNodeForm, setShowNodeForm] = useState(false);\n  const [nodeFormData, setNodeFormData] = useState({ name: '', type: '' });\n  const [branchCount, setBranchCount] = useState(1);\n  const [showAddNodeMenu, setShowAddNodeMenu] = useState(false);\n  const reactFlowWrapper = useRef(null);\n\n  // Handle node click\n  const onNodeClick = (event, node) => {\n    event.stopPropagation();\n    setSelectedNode(node);\n    setNodeFormData({\n      id: node.id,\n      name: node.data.label,\n      type: node.type,\n      branches: node.data.branches || []\n    });\n    setShowNodeForm(true);\n  };\n\n  // Handle background click to close forms\n  const onPaneClick = () => {\n    setSelectedNode(null);\n    setShowNodeForm(false);\n    setShowNodeMenu(false);\n    setShowAddNodeMenu(false);\n  };\n\n  // Handle edge click to show add node menu\n  const onEdgeClick = (event, edge) => {\n    event.preventDefault();\n    setClickedEdgeId(edge.id);\n    \n    // Calculate position for the node menu\n    const sourceNode = nodes.find(node => node.id === edge.source);\n    const targetNode = nodes.find(node => node.id === edge.target);\n    \n    if (sourceNode && targetNode) {\n      const x = (sourceNode.position.x + targetNode.position.x) / 2;\n      const y = (sourceNode.position.y + targetNode.position.y) / 2;\n      \n      setMenuPosition({ x, y });\n      setShowNodeMenu(true);\n    }\n  };\n\n  // Add a new node between two existing nodes\n  const addNodeBetween = (nodeType) => {\n    if (!clickedEdgeId) return;\n    \n    const edge = edges.find(e => e.id === clickedEdgeId);\n    if (!edge) return;\n    \n    const sourceNode = nodes.find(node => node.id === edge.source);\n    const targetNode = nodes.find(node => node.id === edge.target);\n    \n    if (!sourceNode || !targetNode) return;\n    \n    // Calculate position for the new node\n    const newNodePosition = {\n      x: (sourceNode.position.x + targetNode.position.x) / 2,\n      y: (sourceNode.position.y + targetNode.position.y) / 2,\n    };\n    \n    const newNodeId = `${nodeType}-${nodeCount}`;\n    \n    let newNode = {\n      id: newNodeId,\n      type: nodeType,\n      position: newNodePosition,\n      data: { label: nodeType === 'action' ? 'Action Node' : 'If / Else' },\n    };\n    \n    // If it's an if/else node, add default branches\n    if (nodeType === 'ifelse') {\n      newNode.data.branches = [\n        { id: 'branch-1', name: 'Branch #1' }\n      ];\n      \n      // Create action nodes for each branch\n      const actionNodes = [\n        {\n          id: `${newNodeId}-branch-1-action`,\n          type: 'action',\n          position: { \n            x: newNodePosition.x - 150, \n            y: newNodePosition.y + 100 \n          },\n          data: { label: 'Branch #1 Action' },\n        },\n        {\n          id: `${newNodeId}-else-action`,\n          type: 'action',\n          position: { \n            x: newNodePosition.x, \n            y: newNodePosition.y + 100 \n          },\n          data: { label: 'Else Action' },\n        }\n      ];\n      \n      // Create an end node for the else branch\n      const elseEndNode = {\n        id: `${newNodeId}-else-end`,\n        type: 'end',\n        position: { \n          x: newNodePosition.x, \n          y: newNodePosition.y + 300 \n        },\n        data: { label: 'END' },\n      };\n      \n      // Create branch edges\n      const branchEdges = [\n        // Connect if/else directly to actions\n        {\n          id: `${newNodeId}-to-branch-1-action`,\n          source: newNodeId,\n          target: `${newNodeId}-branch-1-action`,\n          type: 'smoothstep',\n          sourceHandle: 'source',\n          targetHandle: 'target',\n        },\n        {\n          id: `${newNodeId}-to-else-action`,\n          source: newNodeId,\n          target: `${newNodeId}-else-action`,\n          type: 'smoothstep',\n          sourceHandle: 'source',\n          targetHandle: 'target',\n        },\n        \n        // Connect branch #1 action to target\n        {\n          id: `${newNodeId}-branch-1-action-to-target`,\n          source: `${newNodeId}-branch-1-action`,\n          target: edge.target,\n          type: 'smoothstep',\n          sourceHandle: 'source',\n          targetHandle: 'target',\n        },\n        \n        // Connect else action to its own end node\n        {\n          id: `${newNodeId}-else-action-to-end`,\n          source: `${newNodeId}-else-action`,\n          target: `${newNodeId}-else-end`,\n          type: 'smoothstep',\n          sourceHandle: 'source',\n          targetHandle: 'target',\n        }\n      ];\n      \n      // Add all nodes and edges\n      setNodes(nds => [...nds, newNode, ...actionNodes, elseEndNode]);\n      setEdges(eds => {\n        // Remove the original edge\n        const filteredEdges = eds.filter(e => e.id !== clickedEdgeId);\n        \n        // Add new edges\n        return [\n          ...filteredEdges,\n          {\n            id: `${edge.source}-${newNodeId}`,\n            source: edge.source,\n            target: newNodeId,\n            type: 'smoothstep',\n            sourceHandle: 'source',\n            targetHandle: 'target',\n          },\n          ...branchEdges\n        ];\n      });\n    } else {\n      // For action nodes\n      setNodes(nds => [...nds, newNode]);\n      \n      // Update edges\n      setEdges(eds => {\n        // Remove the original edge\n        const filteredEdges = eds.filter(e => e.id !== clickedEdgeId);\n        \n        // Add new edges\n        return [\n          ...filteredEdges,\n          {\n            id: `${edge.source}-${newNodeId}`,\n            source: edge.source,\n            target: newNodeId,\n            type: 'smoothstep',\n            sourceHandle: 'source',\n            targetHandle: 'target',\n          },\n          {\n            id: `${newNodeId}-${edge.target}`,\n            source: newNodeId,\n            target: edge.target,\n            type: 'smoothstep',\n            sourceHandle: 'source',\n            targetHandle: 'target',\n          }\n        ];\n      });\n    }\n    \n    setNodeCount(nodeCount + 1);\n    setShowNodeMenu(false);\n  };\n\n  // Show the Add Node menu\n  const showAddNodeMenuHandler = () => {\n    setMenuPosition({ x: 100, y: 100 }); // Position near the Add Node button\n    setShowAddNodeMenu(true);\n  };\n\n  // Add a new action node directly from the Add Node button\n  const addActionNode = () => {\n    const newNodeId = `action-${nodeCount}`;\n    \n    // Find the last node before the end node\n    let lastNodeBeforeEnd = 'start';\n    let lastNodeY = 50; // Default Y position of start node\n    \n    // Find all edges that connect to the end node\n    const endEdges = edges.filter(edge => edge.target === 'end');\n    \n    if (endEdges.length > 0) {\n      // Get the source node of the edge connecting to end\n      lastNodeBeforeEnd = endEdges[0].source;\n      const lastNode = nodes.find(node => node.id === lastNodeBeforeEnd);\n      if (lastNode) {\n        lastNodeY = lastNode.position.y;\n      }\n    }\n    \n    // Calculate position for the new node\n    const newNodePosition = {\n      x: 300, // Keep X position consistent\n      y: lastNodeY + 150, // Position below the last node\n    };\n    \n    // Create the new node\n    const newNode = {\n      id: newNodeId,\n      type: 'action',\n      position: newNodePosition,\n      data: { label: 'Action Node' },\n    };\n    \n    // Add the new node\n    setNodes(nds => [...nds, newNode]);\n    \n    // Remove the edge connecting to end\n    setEdges(eds => {\n      // Filter out the edge connecting to end\n      const filteredEdges = eds.filter(edge => !(edge.source === lastNodeBeforeEnd && edge.target === 'end'));\n      \n      // Add new edges\n      return [\n        ...filteredEdges,\n        {\n          id: `${lastNodeBeforeEnd}-${newNodeId}`,\n          source: lastNodeBeforeEnd,\n          target: newNodeId,\n          type: 'smoothstep',\n          sourceHandle: 'source',\n          targetHandle: 'target',\n        },\n        {\n          id: `${newNodeId}-end`,\n          source: newNodeId,\n          target: 'end',\n          type: 'smoothstep',\n          sourceHandle: 'source',\n          targetHandle: 'target',\n        }\n      ];\n    });\n    \n    setNodeCount(nodeCount + 1);\n    setShowAddNodeMenu(false);\n  };\n\n  // Add a new if/else node directly from the Add Node button\n  const addIfElseNode = () => {\n    const newNodeId = `ifelse-${nodeCount}`;\n    \n    // Find the last node before the end node\n    let lastNodeBeforeEnd = 'start';\n    let lastNodeY = 50; // Default Y position of start node\n    \n    // Find all edges that connect to the end node\n    const endEdges = edges.filter(edge => edge.target === 'end');\n    \n    if (endEdges.length > 0) {\n      // Get the source node of the edge connecting to end\n      lastNodeBeforeEnd = endEdges[0].source;\n      const lastNode = nodes.find(node => node.id === lastNodeBeforeEnd);\n      if (lastNode) {\n        lastNodeY = lastNode.position.y;\n      }\n    }\n    \n    // Calculate position for the new node\n    const newNodePosition = {\n      x: 300, // Keep X position consistent\n      y: lastNodeY + 150, // Position below the last node\n    };\n    \n    // Create the new if/else node\n    const newNode = {\n      id: newNodeId,\n      type: 'ifelse',\n      position: newNodePosition,\n      data: { \n        label: 'If / Else',\n        branches: [\n          { id: 'branch-1', name: 'Branch #1' }\n        ]\n      },\n    };\n    \n    // Create action nodes for each branch\n    const actionNodes = [\n      {\n        id: `${newNodeId}-branch-1-action`,\n        type: 'action',\n        position: { \n          x: newNodePosition.x - 150, \n          y: newNodePosition.y + 100 \n        },\n        data: { label: 'Branch #1 Action' },\n      },\n      {\n        id: `${newNodeId}-else-action`,\n        type: 'action',\n        position: { \n          x: newNodePosition.x, \n          y: newNodePosition.y + 100 \n        },\n        data: { label: 'Else Action' },\n      }\n    ];\n    \n    // Create an end node for the else branch\n    const elseEndNode = {\n      id: `${newNodeId}-else-end`,\n      type: 'end',\n      position: { \n        x: newNodePosition.x, \n        y: newNodePosition.y + 300 \n      },\n      data: { label: 'END' },\n    };\n    \n    // Create branch edges\n    const branchEdges = [\n      // Connect if/else directly to actions\n      {\n        id: `${newNodeId}-to-branch-1-action`,\n        source: newNodeId,\n        target: `${newNodeId}-branch-1-action`,\n        type: 'smoothstep',\n        sourceHandle: 'source',\n        targetHandle: 'target',\n      },\n      {\n        id: `${newNodeId}-to-else-action`,\n        source: newNodeId,\n        target: `${newNodeId}-else-action`,\n        type: 'smoothstep',\n        sourceHandle: 'source',\n        targetHandle: 'target',\n      },\n      \n      // Connect branch #1 action to main end\n      {\n        id: `${newNodeId}-branch-1-action-to-end`,\n        source: `${newNodeId}-branch-1-action`,\n        target: 'end',\n        type: 'smoothstep',\n        sourceHandle: 'source',\n        targetHandle: 'target',\n      },\n      \n      // Connect else action to its own end node\n      {\n        id: `${newNodeId}-else-action-to-end`,\n        source: `${newNodeId}-else-action`,\n        target: `${newNodeId}-else-end`,\n        type: 'smoothstep',\n        sourceHandle: 'source',\n        targetHandle: 'target',\n      }\n    ];\n    \n    // Connect the last node to the if/else node\n    const connectToIfElseEdge = {\n      id: `${lastNodeBeforeEnd}-${newNodeId}`,\n      source: lastNodeBeforeEnd,\n      target: newNodeId,\n      type: 'smoothstep',\n      sourceHandle: 'source',\n      targetHandle: 'target',\n    };\n    \n    // Add all nodes\n    setNodes(nds => [...nds, newNode, ...actionNodes, elseEndNode]);\n    \n    // Update edges\n    setEdges(eds => {\n      // Filter out the edge connecting to end\n      const filteredEdges = eds.filter(edge => !(edge.source === lastNodeBeforeEnd && edge.target === 'end'));\n      \n      // Add new edges\n      return [\n        ...filteredEdges,\n        connectToIfElseEdge,\n        ...branchEdges\n      ];\n    });\n    \n    setNodeCount(nodeCount + 1);\n    setShowAddNodeMenu(false);\n  };\n\n  // Add a new branch to an if/else node\n  const addBranch = () => {\n    if (!selectedNode || selectedNode.type !== 'ifelse') return;\n    \n    const newBranchId = `branch-${nodeFormData.branches.length + 1}`;\n    const newBranch = { id: newBranchId, name: `Branch #${nodeFormData.branches.length + 1}` };\n    \n    setNodeFormData({\n      ...nodeFormData,\n      branches: [...nodeFormData.branches, newBranch]\n    });\n    \n    setBranchCount(branchCount + 1);\n  };\n\n  // Remove a branch from an if/else node\n  const removeBranch = (branchId) => {\n    if (!selectedNode || selectedNode.type !== 'ifelse') return;\n    \n    setNodeFormData({\n      ...nodeFormData,\n      branches: nodeFormData.branches.filter(branch => branch.id !== branchId)\n    });\n  };\n\n  // Update branch name\n  const updateBranchName = (branchId, newName) => {\n    if (!selectedNode || selectedNode.type !== 'ifelse') return;\n    \n    setNodeFormData({\n      ...nodeFormData,\n      branches: nodeFormData.branches.map(branch => \n        branch.id === branchId ? { ...branch, name: newName } : branch\n      )\n    });\n  };\n\n  // Handle form submission for node editing\n  const handleNodeFormSubmit = (e) => {\n    e.preventDefault();\n    \n    if (!selectedNode) return;\n    \n    // Update node data\n    setNodes(nds => \n      nds.map(node => {\n        if (node.id === selectedNode.id) {\n          // For if/else nodes, update branch names too\n          if (node.type === 'ifelse') {\n            // Update branch label nodes\n            const updatedNode = {\n              ...node,\n              data: {\n                ...node.data,\n                label: nodeFormData.name,\n                branches: nodeFormData.branches\n              }\n            };\n            return updatedNode;\n          }\n          \n          // For other node types\n          return {\n            ...node,\n            data: {\n              ...node.data,\n              label: nodeFormData.name\n            }\n          };\n        } else if (selectedNode.type === 'ifelse' && node.id.includes('branch') && node.id.startsWith(selectedNode.id.split('-')[0])) {\n          // Update branch label nodes\n          const branchIndex = parseInt(node.id.split('-')[1]) - 1;\n          if (branchIndex >= 0 && branchIndex < nodeFormData.branches.length) {\n            return {\n              ...node,\n              data: {\n                ...node.data,\n                label: nodeFormData.branches[branchIndex].name\n              }\n            };\n          }\n        }\n        return node;\n      })\n    );\n    \n    setShowNodeForm(false);\n    setSelectedNode(null);\n  };\n\n  // Handle node deletion\n  const deleteNode = () => {\n    if (!selectedNode || selectedNode.id === 'start' || selectedNode.id === 'end') return;\n    \n    // Find incoming and outgoing edges\n    const incomingEdges = edges.filter(edge => edge.target === selectedNode.id);\n    const outgoingEdges = edges.filter(edge => edge.source === selectedNode.id);\n    \n    // For if/else nodes, we need to handle differently\n    if (selectedNode.type === 'ifelse') {\n      // Find all related nodes (branch nodes, action nodes, end nodes)\n      const relatedNodes = nodes.filter(node => \n        node.id.includes(selectedNode.id) || \n        (node.id.includes('branch') && node.id.includes(selectedNode.id.split('-')[1])) ||\n        node.id.includes(`${selectedNode.id}-else-end`)\n      );\n      \n      const relatedNodeIds = relatedNodes.map(node => node.id);\n      \n      // Find all edges connected to related nodes\n      const relatedEdges = edges.filter(edge => \n        relatedNodeIds.includes(edge.source) || \n        relatedNodeIds.includes(edge.target) ||\n        edge.source === selectedNode.id ||\n        edge.target === selectedNode.id\n      );\n      \n      // Remove the if/else node and all related nodes\n      setNodes(nds => nds.filter(node => \n        node.id !== selectedNode.id && \n        !relatedNodeIds.includes(node.id)\n      ));\n      \n      // Remove all edges connected to this node and related nodes\n      setEdges(eds => {\n        const filteredEdges = eds.filter(edge => \n          !relatedEdges.some(re => re.id === edge.id)\n        );\n        \n        // Connect the incoming node to the next node or end\n        if (incomingEdges.length > 0) {\n          // Connect the incoming node directly to the end node\n          filteredEdges.push({\n            id: `${incomingEdges[0].source}-end`,\n            source: incomingEdges[0].source,\n            target: 'end',\n            type: 'smoothstep',\n            sourceHandle: 'source',\n            targetHandle: 'target',\n          });\n        } else {\n          // If no incoming edges (unlikely), ensure start is connected to end\n          const hasStartToEndEdge = filteredEdges.some(edge => \n            edge.source === 'start' && edge.target === 'end'\n          );\n          \n          if (!hasStartToEndEdge) {\n            filteredEdges.push({\n              id: 'start-end',\n              source: 'start',\n              target: 'end',\n              type: 'smoothstep',\n              sourceHandle: 'source',\n              targetHandle: 'target',\n            });\n          }\n        }\n        \n        return filteredEdges;\n      });\n    } else {\n      // For regular action nodes\n      // Remove just this node\n      setNodes(nds => nds.filter(node => node.id !== selectedNode.id));\n      \n      // Remove edges connected to this node and reconnect\n      setEdges(eds => {\n        const filteredEdges = eds.filter(edge => \n          edge.source !== selectedNode.id && \n          edge.target !== selectedNode.id\n        );\n        \n        // If there were both incoming and outgoing edges, connect them\n        if (incomingEdges.length > 0 && outgoingEdges.length > 0) {\n          filteredEdges.push({\n            id: `${incomingEdges[0].source}-${outgoingEdges[0].target}`,\n            source: incomingEdges[0].source,\n            target: outgoingEdges[0].target,\n            type: 'smoothstep',\n            sourceHandle: 'source',\n            targetHandle: 'target',\n          });\n        } else if (incomingEdges.length > 0) {\n          // If only incoming edges, connect to end\n          filteredEdges.push({\n            id: `${incomingEdges[0].source}-end`,\n            source: incomingEdges[0].source,\n            target: 'end',\n            type: 'smoothstep',\n            sourceHandle: 'source',\n            targetHandle: 'target',\n          });\n        } else if (outgoingEdges.length > 0) {\n          // If only outgoing edges, connect start to the target\n          filteredEdges.push({\n            id: `start-${outgoingEdges[0].target}`,\n            source: 'start',\n            target: outgoingEdges[0].target,\n            type: 'smoothstep',\n            sourceHandle: 'source',\n            targetHandle: 'target',\n          });\n        } else {\n          // If no edges at all, ensure start is connected to end\n          const hasStartToEndEdge = filteredEdges.some(edge => \n            edge.source === 'start' && edge.target === 'end'\n          );\n          \n          if (!hasStartToEndEdge) {\n            filteredEdges.push({\n              id: 'start-end',\n              source: 'start',\n              target: 'end',\n              type: 'smoothstep',\n              sourceHandle: 'source',\n              targetHandle: 'target',\n            });\n          }\n        }\n        \n        return filteredEdges;\n      });\n    }\n    \n    setShowNodeForm(false);\n    setSelectedNode(null);\n  };\n\n  return (\n    <div style={{ width: '100vw', height: '100vh' }} ref={reactFlowWrapper}>\n      <ReactFlow\n        nodes={nodes}\n        edges={edges}\n        onNodesChange={onNodesChange}\n        onEdgesChange={onEdgesChange}\n        onNodeClick={onNodeClick}\n        onEdgeClick={onEdgeClick}\n        onPaneClick={onPaneClick}\n        nodeTypes={nodeTypes}\n        fitView\n      >\n        <Controls />\n        <MiniMap />\n        <Background variant=\"dots\" gap={12} size={1} />\n        \n        <Panel position=\"top-left\">\n          <div style={{ display: 'flex', gap: '10px' }}>\n            <button\n              onClick={showAddNodeMenuHandler}\n              style={{\n                padding: '10px',\n                backgroundColor: '#1890ff',\n                color: 'white',\n                border: 'none',\n                borderRadius: '5px',\n                cursor: 'pointer',\n              }}\n            >\n              Add Node\n            </button>\n          </div>\n        </Panel>\n      </ReactFlow>\n\n      {/* Node Selection Menu */}\n      {showNodeMenu && (\n        <div\n          style={{\n            position: 'absolute',\n            top: `${menuPosition.y}px`,\n            left: `${menuPosition.x}px`,\n            backgroundColor: 'white',\n            padding: '10px',\n            borderRadius: '5px',\n            boxShadow: '0 0 10px rgba(0,0,0,0.2)',\n            zIndex: 1000,\n            transform: 'translate(-50%, -50%)',\n          }}\n        >\n          <div style={{ marginBottom: '10px', fontWeight: 'bold' }}>Add Node:</div>\n          <div style={{ display: 'flex', gap: '10px' }}>\n            <button\n              onClick={() => addNodeBetween('action')}\n              style={{\n                padding: '8px 12px',\n                backgroundColor: '#1890ff',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px',\n                cursor: 'pointer',\n              }}\n            >\n              Action Node\n            </button>\n            <button\n              onClick={() => addNodeBetween('ifelse')}\n              style={{\n                padding: '8px 12px',\n                backgroundColor: '#ffc53d',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px',\n                cursor: 'pointer',\n              }}\n            >\n              If / Else Node\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* Add Node Menu */}\n      {showAddNodeMenu && (\n        <div\n          style={{\n            position: 'absolute',\n            top: `${menuPosition.y}px`,\n            left: `${menuPosition.x}px`,\n            backgroundColor: 'white',\n            padding: '10px',\n            borderRadius: '5px',\n            boxShadow: '0 0 10px rgba(0,0,0,0.2)',\n            zIndex: 1000,\n            transform: 'translate(-50%, -50%)',\n          }}\n        >\n          <div style={{ marginBottom: '10px', fontWeight: 'bold' }}>Add Node:</div>\n          <div style={{ display: 'flex', gap: '10px' }}>\n            <button\n              onClick={addActionNode}\n              style={{\n                padding: '8px 12px',\n                backgroundColor: '#1890ff',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px',\n                cursor: 'pointer',\n              }}\n            >\n              Action Node\n            </button>\n            <button\n              onClick={addIfElseNode}\n              style={{\n                padding: '8px 12px',\n                backgroundColor: '#ffc53d',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px',\n                cursor: 'pointer',\n              }}\n            >\n              If / Else Node\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* Node Form */}\n      {showNodeForm && selectedNode && (\n        <div\n          style={{\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            backgroundColor: 'white',\n            padding: '20px',\n            borderRadius: '5px',\n            boxShadow: '0 0 10px rgba(0,0,0,0.2)',\n            zIndex: 1000,\n            transform: 'translate(-50%, -50%)',\n            minWidth: '300px',\n          }}\n        >\n          <h3 style={{ marginTop: 0 }}>Edit Node</h3>\n          <form onSubmit={handleNodeFormSubmit}>\n            <div style={{ marginBottom: '15px' }}>\n              <label style={{ display: 'block', marginBottom: '5px' }}>Node Name:</label>\n              <input\n                type=\"text\"\n                value={nodeFormData.name}\n                onChange={(e) => setNodeFormData({ ...nodeFormData, name: e.target.value })}\n                style={{\n                  width: '100%',\n                  padding: '8px',\n                  borderRadius: '4px',\n                  border: '1px solid #d9d9d9',\n                }}\n              />\n            </div>\n            \n            {selectedNode.type === 'ifelse' && (\n              <div style={{ marginBottom: '15px' }}>\n                <label style={{ display: 'block', marginBottom: '5px' }}>Branches:</label>\n                {nodeFormData.branches.map((branch, index) => (\n                  <div key={branch.id} style={{ display: 'flex', marginBottom: '5px', alignItems: 'center' }}>\n                    <input\n                      type=\"text\"\n                      value={branch.name}\n                      onChange={(e) => updateBranchName(branch.id, e.target.value)}\n                      style={{\n                        flex: 1,\n                        padding: '8px',\n                        borderRadius: '4px',\n                        border: '1px solid #d9d9d9',\n                        marginRight: '5px',\n                      }}\n                    />\n                    {index > 0 && (\n                      <button\n                        type=\"button\"\n                        onClick={() => removeBranch(branch.id)}\n                        style={{\n                          padding: '8px',\n                          backgroundColor: '#ff4d4f',\n                          color: 'white',\n                          border: 'none',\n                          borderRadius: '4px',\n                          cursor: 'pointer',\n                        }}\n                      >\n                        Remove\n                      </button>\n                    )}\n                  </div>\n                ))}\n                <button\n                  type=\"button\"\n                  onClick={addBranch}\n                  style={{\n                    padding: '8px',\n                    backgroundColor: '#52c41a',\n                    color: 'white',\n                    border: 'none',\n                    borderRadius: '4px',\n                    cursor: 'pointer',\n                    marginTop: '5px',\n                  }}\n                >\n                  Add Branch\n                </button>\n              </div>\n            )}\n            \n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n              <button\n                type=\"submit\"\n                style={{\n                  padding: '10px',\n                  backgroundColor: '#1890ff',\n                  color: 'white',\n                  border: 'none',\n                  borderRadius: '4px',\n                  cursor: 'pointer',\n                }}\n              >\n                Save\n              </button>\n              <button\n                type=\"button\"\n                onClick={deleteNode}\n                style={{\n                  padding: '10px',\n                  backgroundColor: '#ff4d4f',\n                  color: 'white',\n                  border: 'none',\n                  borderRadius: '4px',\n                  cursor: 'pointer',\n                }}\n              >\n                Delete Node\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => {\n                  setShowNodeForm(false);\n                  setSelectedNode(null);\n                }}\n                style={{\n                  padding: '10px',\n                  backgroundColor: '#d9d9d9',\n                  color: 'black',\n                  border: 'none',\n                  borderRadius: '4px',\n                  cursor: 'pointer',\n                }}\n              >\n                Cancel\n              </button>\n            </div>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}