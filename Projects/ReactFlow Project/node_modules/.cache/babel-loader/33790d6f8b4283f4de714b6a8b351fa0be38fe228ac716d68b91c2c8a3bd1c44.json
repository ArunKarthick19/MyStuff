{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arunk\\\\Documents\\\\Arun works\\\\tt\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from 'react';\nimport ReactFlow, { MiniMap, Controls, Background, useNodesState, useEdgesState, addEdge } from 'reactflow';\nimport 'react-flow-renderer/dist/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialNodes = [{\n  id: 'start',\n  position: {\n    x: 300,\n    y: 50\n  },\n  data: {\n    label: 'Start Node'\n  }\n}, {\n  id: 'end',\n  position: {\n    x: 300,\n    y: 400\n  },\n  data: {\n    label: 'End Node'\n  }\n}];\nconst initialEdges = [{\n  id: 'start->end',\n  type: 'custom-edge',\n  source: 'start',\n  target: 'end'\n}];\nexport default function App() {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const [nodeCount, setNodeCount] = useState(0); // To generate unique node IDs\n  const [showNodeTypeSelector, setShowNodeTypeSelector] = useState(false); // To toggle the node type selector\n\n  // Function to handle adding a new node\n  const addNodeHandler = type => {\n    const newNodeId = `node-${nodeCount}`;\n    const newNode = {\n      id: newNodeId,\n      position: {\n        x: 300,\n        y: 100 + nodeCount * 100\n      },\n      // Position below the previous node\n      data: {\n        label: type === 'action' ? 'Action Node' : 'If/Else Node'\n      },\n      style: {\n        background: type === 'action' ? '#a0d911' : '#ffa940',\n        padding: 10,\n        borderRadius: 5\n      }\n    };\n\n    // Add the new node\n    setNodes(nds => [...nds, newNode]);\n\n    // Connect the new node to the previous node and the end node\n    const newEdges = [{\n      id: `e-${nodes[nodes.length - 1].id}-${newNodeId}`,\n      source: nodes[nodes.length - 1].id,\n      // Connect to the last node\n      target: newNodeId,\n      type: 'smoothstep',\n      animated: true,\n      style: {\n        stroke: '#1890ff',\n        strokeWidth: 2\n      }\n    }, {\n      id: `e-${newNodeId}-end`,\n      source: newNodeId,\n      target: 'end',\n      // Connect to the end node\n      type: 'smoothstep',\n      animated: true,\n      style: {\n        stroke: '#1890ff',\n        strokeWidth: 2\n      }\n    }];\n\n    // Remove the old edge to the end node and add the new edges\n    setEdges(eds => [...eds.filter(edge => edge.target !== 'end'), ...newEdges]);\n\n    // Increment node count\n    setNodeCount(nodeCount + 1);\n    setShowNodeTypeSelector(false); // Hide the node type selector\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100vw',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      fitView: true,\n      children: [/*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Background, {\n        variant: \"dots\",\n        gap: 12,\n        size: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowNodeTypeSelector(true),\n      style: {\n        position: 'absolute',\n        top: '20px',\n        left: '20px',\n        padding: '10px',\n        backgroundColor: '#007bff',\n        color: 'white',\n        border: 'none',\n        borderRadius: '5px',\n        cursor: 'pointer'\n      },\n      children: \"Add Node\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), showNodeTypeSelector && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '60px',\n        left: '20px',\n        padding: '10px',\n        backgroundColor: 'white',\n        border: '1px solid #ccc',\n        borderRadius: '5px',\n        boxShadow: '0 2px 5px rgba(0, 0, 0, 0.2)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: '0 0 10px',\n          fontWeight: 'bold'\n        },\n        children: \"Select Node Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addNodeHandler('action'),\n        style: {\n          display: 'block',\n          width: '100%',\n          padding: '10px',\n          marginBottom: '5px',\n          backgroundColor: '#a0d911',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: 'pointer'\n        },\n        children: \"Action Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => addNodeHandler('ifelse'),\n        style: {\n          display: 'block',\n          width: '100%',\n          padding: '10px',\n          backgroundColor: '#ffa940',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: 'pointer'\n        },\n        children: \"If/Else Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jH1e73FZ40A/FLFUMYhblgYK36Y=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useCallback","useState","ReactFlow","MiniMap","Controls","Background","useNodesState","useEdgesState","addEdge","jsxDEV","_jsxDEV","initialNodes","id","position","x","y","data","label","initialEdges","type","source","target","App","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","nodeCount","setNodeCount","showNodeTypeSelector","setShowNodeTypeSelector","addNodeHandler","newNodeId","newNode","style","background","padding","borderRadius","nds","newEdges","length","animated","stroke","strokeWidth","eds","filter","edge","width","height","children","fitView","fileName","_jsxFileName","lineNumber","columnNumber","variant","gap","size","onClick","top","left","backgroundColor","color","border","cursor","boxShadow","margin","fontWeight","display","marginBottom","_c","$RefreshReg$"],"sources":["C:/Users/arunk/Documents/Arun works/tt/frontend/src/App.js"],"sourcesContent":["import React, { useCallback, useState } from 'react';\nimport ReactFlow, {\n  MiniMap,\n  Controls,\n  Background,\n  useNodesState,\n  useEdgesState,\n  addEdge,\n} from 'reactflow';\n\nimport 'react-flow-renderer/dist/style.css';\n\nconst initialNodes = [\n  { id: 'start', position: { x: 300, y: 50 }, data: { label: 'Start Node' } },\n  { id: 'end', position: { x: 300, y: 400 }, data: { label: 'End Node' } },\n];\n\nconst initialEdges = [\n  { id: 'start->end', type: 'custom-edge', source: 'start', target: 'end' },\n];\n\nexport default function App() {\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const [nodeCount, setNodeCount] = useState(0); // To generate unique node IDs\n  const [showNodeTypeSelector, setShowNodeTypeSelector] = useState(false); // To toggle the node type selector\n\n  // Function to handle adding a new node\n  const addNodeHandler = (type) => {\n    const newNodeId = `node-${nodeCount}`;\n    const newNode = {\n      id: newNodeId,\n      position: { x: 300, y: 100 + nodeCount * 100 }, // Position below the previous node\n      data: { label: type === 'action' ? 'Action Node' : 'If/Else Node' },\n      style: {\n        background: type === 'action' ? '#a0d911' : '#ffa940',\n        padding: 10,\n        borderRadius: 5,\n      },\n    };\n\n    // Add the new node\n    setNodes((nds) => [...nds, newNode]);\n\n    // Connect the new node to the previous node and the end node\n    const newEdges = [\n      {\n        id: `e-${nodes[nodes.length - 1].id}-${newNodeId}`,\n        source: nodes[nodes.length - 1].id, // Connect to the last node\n        target: newNodeId,\n        type: 'smoothstep',\n        animated: true,\n        style: { stroke: '#1890ff', strokeWidth: 2 },\n      },\n      {\n        id: `e-${newNodeId}-end`,\n        source: newNodeId,\n        target: 'end', // Connect to the end node\n        type: 'smoothstep',\n        animated: true,\n        style: { stroke: '#1890ff', strokeWidth: 2 },\n      },\n    ];\n\n    // Remove the old edge to the end node and add the new edges\n    setEdges((eds) => [\n      ...eds.filter((edge) => edge.target !== 'end'),\n      ...newEdges,\n    ]);\n\n    // Increment node count\n    setNodeCount(nodeCount + 1);\n    setShowNodeTypeSelector(false); // Hide the node type selector\n  };\n\n  return (\n    <div style={{ width: '100vw', height: '100vh' }}>\n      <ReactFlow\n        nodes={nodes}\n        edges={edges}\n        onNodesChange={onNodesChange}\n        onEdgesChange={onEdgesChange}\n        fitView\n      >\n        <Controls />\n        <MiniMap />\n        <Background variant=\"dots\" gap={12} size={1} />\n      </ReactFlow>\n\n      {/* Add Node Button */}\n      <button\n        onClick={() => setShowNodeTypeSelector(true)}\n        style={{\n          position: 'absolute',\n          top: '20px',\n          left: '20px',\n          padding: '10px',\n          backgroundColor: '#007bff',\n          color: 'white',\n          border: 'none',\n          borderRadius: '5px',\n          cursor: 'pointer',\n        }}\n      >\n        Add Node\n      </button>\n\n      {/* Node Type Selector */}\n      {showNodeTypeSelector && (\n        <div\n          style={{\n            position: 'absolute',\n            top: '60px',\n            left: '20px',\n            padding: '10px',\n            backgroundColor: 'white',\n            border: '1px solid #ccc',\n            borderRadius: '5px',\n            boxShadow: '0 2px 5px rgba(0, 0, 0, 0.2)',\n          }}\n        >\n          <p style={{ margin: '0 0 10px', fontWeight: 'bold' }}>\n            Select Node Type:\n          </p>\n          <button\n            onClick={() => addNodeHandler('action')}\n            style={{\n              display: 'block',\n              width: '100%',\n              padding: '10px',\n              marginBottom: '5px',\n              backgroundColor: '#a0d911',\n              color: 'white',\n              border: 'none',\n              borderRadius: '5px',\n              cursor: 'pointer',\n            }}\n          >\n            Action Node\n          </button>\n          <button\n            onClick={() => addNodeHandler('ifelse')}\n            style={{\n              display: 'block',\n              width: '100%',\n              padding: '10px',\n              backgroundColor: '#ffa940',\n              color: 'white',\n              border: 'none',\n              borderRadius: '5px',\n              cursor: 'pointer',\n            }}\n          >\n            If/Else Node\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}