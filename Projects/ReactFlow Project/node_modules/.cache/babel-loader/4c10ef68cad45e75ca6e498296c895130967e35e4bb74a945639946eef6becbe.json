{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arunk\\\\Documents\\\\Arun works\\\\tt\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useRef } from 'react';\nimport ReactFlow, { MiniMap, Controls, Background, useNodesState, useEdgesState, addEdge, Panel } from 'reactflow';\nimport 'reactflow/dist/style.css';\n\n// Custom node types\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nodeTypes = {\n  start: ({\n    data,\n    id\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '15px',\n      borderRadius: '8px',\n      background: '#e6f7ff',\n      border: '1px solid #1890ff',\n      width: '180px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        marginBottom: '8px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '30px',\n          height: '30px',\n          borderRadius: '50%',\n          background: '#e6f7ff',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          marginRight: '10px',\n          border: '1px solid #1890ff'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"start\",\n          children: \"\\uD83D\\uDE80\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontWeight: 'bold'\n        },\n        children: \"Start Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.label || 'Start'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this),\n  action: ({\n    data,\n    id\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '15px',\n      borderRadius: '8px',\n      background: '#f0f5ff',\n      border: '1px solid #597ef7',\n      width: '180px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        marginBottom: '8px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '30px',\n          height: '30px',\n          borderRadius: '50%',\n          background: '#f0f5ff',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          marginRight: '10px',\n          border: '1px solid #597ef7'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"action\",\n          children: \"\\u2699\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontWeight: 'bold'\n        },\n        children: \"Action Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.label || 'Action'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this),\n  ifelse: ({\n    data,\n    id\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '15px',\n      borderRadius: '8px',\n      background: '#fff7e6',\n      border: '1px solid #ffc53d',\n      width: '180px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        marginBottom: '8px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '30px',\n          height: '30px',\n          borderRadius: '50%',\n          background: '#fff7e6',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          marginRight: '10px',\n          border: '1px solid #ffc53d'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"if-else\",\n          children: \"\\uD83D\\uDD00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontWeight: 'bold'\n        },\n        children: \"If / Else\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.label || 'If / Else'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this),\n  end: ({\n    data,\n    id\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '15px',\n      borderRadius: '8px',\n      background: '#f9f0ff',\n      border: '1px solid #9254de',\n      width: '180px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        marginBottom: '8px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '30px',\n          height: '30px',\n          borderRadius: '50%',\n          background: '#f9f0ff',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          marginRight: '10px',\n          border: '1px solid #9254de'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"end\",\n          children: \"\\uD83C\\uDFC1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontWeight: 'bold'\n        },\n        children: \"End Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.label || 'END'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this),\n  branch: ({\n    data,\n    id\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '10px',\n      borderRadius: '8px',\n      background: '#f5f5f5',\n      border: '1px solid #d9d9d9',\n      width: '120px',\n      textAlign: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.label || 'Branch'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this)\n};\nconst initialNodes = [{\n  id: 'start',\n  type: 'start',\n  position: {\n    x: 300,\n    y: 50\n  },\n  data: {\n    label: 'Start'\n  }\n}, {\n  id: 'end',\n  type: 'end',\n  position: {\n    x: 300,\n    y: 250\n  },\n  data: {\n    label: 'END'\n  }\n}];\nconst initialEdges = [{\n  id: 'start->end',\n  source: 'start',\n  target: 'end',\n  type: 'smoothstep'\n}];\nexport default function App() {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const [nodeCount, setNodeCount] = useState(1); // For unique node IDs\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [showNodeMenu, setShowNodeMenu] = useState(false);\n  const [menuPosition, setMenuPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [clickedEdgeId, setClickedEdgeId] = useState(null);\n  const [showNodeForm, setShowNodeForm] = useState(false);\n  const [nodeFormData, setNodeFormData] = useState({\n    name: '',\n    type: ''\n  });\n  const [branchCount, setBranchCount] = useState(1);\n  const reactFlowWrapper = useRef(null);\n\n  // Handle node click\n  const onNodeClick = (event, node) => {\n    event.stopPropagation();\n    setSelectedNode(node);\n    setNodeFormData({\n      id: node.id,\n      name: node.data.label,\n      type: node.type,\n      branches: node.data.branches || []\n    });\n    setShowNodeForm(true);\n  };\n\n  // Handle background click to close forms\n  const onPaneClick = () => {\n    setSelectedNode(null);\n    setShowNodeForm(false);\n    setShowNodeMenu(false);\n  };\n\n  // Handle edge click to show add node menu\n  const onEdgeClick = (event, edge) => {\n    event.preventDefault();\n    setClickedEdgeId(edge.id);\n\n    // Calculate position for the node menu\n    const sourceNode = nodes.find(node => node.id === edge.source);\n    const targetNode = nodes.find(node => node.id === edge.target);\n    if (sourceNode && targetNode) {\n      const x = (sourceNode.position.x + targetNode.position.x) / 2;\n      const y = (sourceNode.position.y + targetNode.position.y) / 2;\n      setMenuPosition({\n        x,\n        y\n      });\n      setShowNodeMenu(true);\n    }\n  };\n\n  // Add a new node between two existing nodes\n  const addNodeBetween = nodeType => {\n    if (!clickedEdgeId) return;\n    const edge = edges.find(e => e.id === clickedEdgeId);\n    if (!edge) return;\n    const sourceNode = nodes.find(node => node.id === edge.source);\n    const targetNode = nodes.find(node => node.id === edge.target);\n    if (!sourceNode || !targetNode) return;\n\n    // Calculate position for the new node\n    const newNodePosition = {\n      x: (sourceNode.position.x + targetNode.position.x) / 2,\n      y: (sourceNode.position.y + targetNode.position.y) / 2\n    };\n    const newNodeId = `${nodeType}-${nodeCount}`;\n    let newNode = {\n      id: newNodeId,\n      type: nodeType,\n      position: newNodePosition,\n      data: {\n        label: nodeType === 'action' ? 'Action Node' : 'If / Else'\n      }\n    };\n\n    // If it's an if/else node, add default branches\n    if (nodeType === 'ifelse') {\n      newNode.data.branches = [{\n        id: 'branch-1',\n        name: 'Branch #1'\n      }, {\n        id: 'branch-2',\n        name: 'Branch #2'\n      }];\n\n      // Create branch nodes\n      const branchNodes = [{\n        id: `${newNodeId}-branch-1-label`,\n        type: 'branch',\n        position: {\n          x: newNodePosition.x - 150,\n          y: newNodePosition.y + 100\n        },\n        data: {\n          label: 'Branch #1'\n        }\n      }, {\n        id: `${newNodeId}-branch-2-label`,\n        type: 'branch',\n        position: {\n          x: newNodePosition.x + 150,\n          y: newNodePosition.y + 100\n        },\n        data: {\n          label: 'Branch #2'\n        }\n      }, {\n        id: `${newNodeId}-else-label`,\n        type: 'branch',\n        position: {\n          x: newNodePosition.x,\n          y: newNodePosition.y + 100\n        },\n        data: {\n          label: 'Else'\n        }\n      }];\n\n      // Create action nodes for each branch (instead of end nodes)\n      const actionNodes = [{\n        id: `${newNodeId}-branch-1-action`,\n        type: 'action',\n        position: {\n          x: newNodePosition.x - 150,\n          y: newNodePosition.y + 200\n        },\n        data: {\n          label: 'Branch #1 Action'\n        }\n      }, {\n        id: `${newNodeId}-branch-2-action`,\n        type: 'action',\n        position: {\n          x: newNodePosition.x + 150,\n          y: newNodePosition.y + 200\n        },\n        data: {\n          label: 'Branch #2 Action'\n        }\n      }, {\n        id: `${newNodeId}-else-action`,\n        type: 'action',\n        position: {\n          x: newNodePosition.x,\n          y: newNodePosition.y + 200\n        },\n        data: {\n          label: 'Else Action'\n        }\n      }];\n\n      // Create a merge node to join all branches\n      const mergeNode = {\n        id: `${newNodeId}-merge`,\n        type: 'action',\n        position: {\n          x: newNodePosition.x,\n          y: newNodePosition.y + 300\n        },\n        data: {\n          label: 'Merge'\n        }\n      };\n\n      // Create branch edges\n      const branchEdges = [\n      // Connect if/else to branch labels\n      {\n        id: `${newNodeId}-to-branch-1`,\n        source: newNodeId,\n        target: `${newNodeId}-branch-1-label`,\n        type: 'smoothstep'\n      }, {\n        id: `${newNodeId}-to-branch-2`,\n        source: newNodeId,\n        target: `${newNodeId}-branch-2-label`,\n        type: 'smoothstep'\n      }, {\n        id: `${newNodeId}-to-else`,\n        source: newNodeId,\n        target: `${newNodeId}-else-label`,\n        type: 'smoothstep'\n      },\n      // Connect branch labels to actions\n      {\n        id: `${newNodeId}-branch-1-label-to-action`,\n        source: `${newNodeId}-branch-1-label`,\n        target: `${newNodeId}-branch-1-action`,\n        type: 'smoothstep'\n      }, {\n        id: `${newNodeId}-branch-2-label-to-action`,\n        source: `${newNodeId}-branch-2-label`,\n        target: `${newNodeId}-branch-2-action`,\n        type: 'smoothstep'\n      }, {\n        id: `${newNodeId}-else-label-to-action`,\n        source: `${newNodeId}-else-label`,\n        target: `${newNodeId}-else-action`,\n        type: 'smoothstep'\n      },\n      // Connect actions to merge node\n      {\n        id: `${newNodeId}-branch-1-action-to-merge`,\n        source: `${newNodeId}-branch-1-action`,\n        target: `${newNodeId}-merge`,\n        type: 'smoothstep'\n      }, {\n        id: `${newNodeId}-branch-2-action-to-merge`,\n        source: `${newNodeId}-branch-2-action`,\n        target: `${newNodeId}-merge`,\n        type: 'smoothstep'\n      }, {\n        id: `${newNodeId}-else-action-to-merge`,\n        source: `${newNodeId}-else-action`,\n        target: `${newNodeId}-merge`,\n        type: 'smoothstep'\n      },\n      // Connect merge node to target\n      {\n        id: `${newNodeId}-merge-to-target`,\n        source: `${newNodeId}-merge`,\n        target: edge.target,\n        type: 'smoothstep'\n      }];\n\n      // Add all nodes and edges\n      setNodes(nds => [...nds, newNode, ...branchNodes, ...actionNodes, mergeNode]);\n      setEdges(eds => {\n        // Remove the original edge\n        const filteredEdges = eds.filter(e => e.id !== clickedEdgeId);\n\n        // Add new edges\n        return [...filteredEdges, {\n          id: `${edge.source}-${newNodeId}`,\n          source: edge.source,\n          target: newNodeId,\n          type: 'smoothstep'\n        }, ...branchEdges];\n      });\n    } else {\n      // For action nodes\n      setNodes(nds => [...nds, newNode]);\n\n      // Update edges\n      setEdges(eds => {\n        // Remove the original edge\n        const filteredEdges = eds.filter(e => e.id !== clickedEdgeId);\n\n        // Add new edges\n        return [...filteredEdges, {\n          id: `${edge.source}-${newNodeId}`,\n          source: edge.source,\n          target: newNodeId,\n          type: 'smoothstep'\n        }, {\n          id: `${newNodeId}-${edge.target}`,\n          source: newNodeId,\n          target: edge.target,\n          type: 'smoothstep'\n        }];\n      });\n    }\n    setNodeCount(nodeCount + 1);\n    setShowNodeMenu(false);\n  };\n\n  // Add a new action node directly from the Add Node button\n  const addActionNode = () => {\n    const newNodeId = `action-${nodeCount}`;\n\n    // Find the last node before the end node\n    let lastNodeBeforeEnd = 'start';\n    let lastNodeY = 50; // Default Y position of start node\n\n    // Find all edges that connect to the end node\n    const endEdges = edges.filter(edge => edge.target === 'end');\n    if (endEdges.length > 0) {\n      // Get the source node of the edge connecting to end\n      lastNodeBeforeEnd = endEdges[0].source;\n      const lastNode = nodes.find(node => node.id === lastNodeBeforeEnd);\n      if (lastNode) {\n        lastNodeY = lastNode.position.y;\n      }\n    }\n\n    // Calculate position for the new node\n    const newNodePosition = {\n      x: 300,\n      // Keep X position consistent\n      y: lastNodeY + 150 // Position below the last node\n    };\n\n    // Create the new node\n    const newNode = {\n      id: newNodeId,\n      type: 'action',\n      position: newNodePosition,\n      data: {\n        label: 'Action Node'\n      }\n    };\n\n    // Add the new node\n    setNodes(nds => [...nds, newNode]);\n\n    // Remove the edge connecting to end\n    setEdges(eds => {\n      // Filter out the edge connecting to end\n      const filteredEdges = eds.filter(edge => !(edge.source === lastNodeBeforeEnd && edge.target === 'end'));\n\n      // Add new edges\n      return [...filteredEdges, {\n        id: `${lastNodeBeforeEnd}-${newNodeId}`,\n        source: lastNodeBeforeEnd,\n        target: newNodeId,\n        type: 'smoothstep'\n      }, {\n        id: `${newNodeId}-end`,\n        source: newNodeId,\n        target: 'end',\n        type: 'smoothstep'\n      }];\n    });\n    setNodeCount(nodeCount + 1);\n  };\n\n  // Handle form submission for node editing\n  const handleNodeFormSubmit = e => {\n    e.preventDefault();\n    if (!selectedNode) return;\n\n    // Update node data\n    setNodes(nds => nds.map(node => {\n      if (node.id === selectedNode.id) {\n        // For if/else nodes, update branch names too\n        if (node.type === 'ifelse') {\n          // Update branch label nodes\n          const updatedNode = {\n            ...node,\n            data: {\n              ...node.data,\n              label: nodeFormData.name,\n              branches: nodeFormData.branches\n            }\n          };\n          return updatedNode;\n        }\n\n        // For other node types\n        return {\n          ...node,\n          data: {\n            ...node.data,\n            label: nodeFormData.name\n          }\n        };\n      } else if (selectedNode.type === 'ifelse' && node.id.includes('branch') && node.id.startsWith(selectedNode.id.split('-')[0])) {\n        // Update branch label nodes\n        const branchIndex = parseInt(node.id.split('-')[1]) - 1;\n        if (branchIndex >= 0 && branchIndex < nodeFormData.branches.length) {\n          return {\n            ...node,\n            data: {\n              ...node.data,\n              label: nodeFormData.branches[branchIndex].name\n            }\n          };\n        }\n      }\n      return node;\n    }));\n    setShowNodeForm(false);\n    setSelectedNode(null);\n  };\n\n  // Handle node deletion\n  const deleteNode = () => {\n    if (!selectedNode || selectedNode.id === 'start' || selectedNode.id === 'end') return;\n\n    // Find incoming and outgoing edges\n    const incomingEdges = edges.filter(edge => edge.target === selectedNode.id);\n    const outgoingEdges = edges.filter(edge => edge.source === selectedNode.id);\n\n    // For if/else nodes, we need to handle differently\n    if (selectedNode.type === 'ifelse') {\n      // Find all related branch nodes and their edges\n      const relatedBranchNodes = nodes.filter(node => node.id.includes('branch') && (node.id.startsWith(selectedNode.id.split('-')[0]) || node.id.includes('else')));\n      const relatedBranchNodeIds = relatedBranchNodes.map(node => node.id);\n\n      // Find all edges connected to branch nodes\n      const branchEdges = edges.filter(edge => relatedBranchNodeIds.includes(edge.source) || relatedBranchNodeIds.includes(edge.target));\n\n      // Remove the if/else node, branch nodes, and all related edges\n      setNodes(nds => nds.filter(node => node.id !== selectedNode.id && !relatedBranchNodeIds.includes(node.id)));\n\n      // Remove all edges connected to this node and branch nodes\n      setEdges(eds => {\n        const filteredEdges = eds.filter(edge => edge.source !== selectedNode.id && edge.target !== selectedNode.id && !branchEdges.some(be => be.id === edge.id));\n\n        // Connect the incoming node to the end node\n        if (incomingEdges.length > 0) {\n          filteredEdges.push({\n            id: `${incomingEdges[0].source}-end`,\n            source: incomingEdges[0].source,\n            target: 'end',\n            type: 'smoothstep'\n          });\n        }\n        return filteredEdges;\n      });\n    } else {\n      // For regular action nodes\n      // Remove just this node\n      setNodes(nds => nds.filter(node => node.id !== selectedNode.id));\n\n      // Remove edges connected to this node and reconnect\n      setEdges(eds => {\n        const filteredEdges = eds.filter(edge => edge.source !== selectedNode.id && edge.target !== selectedNode.id);\n\n        // If there were both incoming and outgoing edges, connect them\n        if (incomingEdges.length > 0 && outgoingEdges.length > 0) {\n          filteredEdges.push({\n            id: `${incomingEdges[0].source}-${outgoingEdges[0].target}`,\n            source: incomingEdges[0].source,\n            target: outgoingEdges[0].target,\n            type: 'smoothstep'\n          });\n        }\n        return filteredEdges;\n      });\n    }\n    setShowNodeForm(false);\n    setSelectedNode(null);\n  };\n\n  // Add a new branch to an if/else node\n  const addBranch = () => {\n    if (!selectedNode || selectedNode.type !== 'ifelse') return;\n    const newBranchId = `branch-${nodeFormData.branches.length + 1}`;\n    const newBranch = {\n      id: newBranchId,\n      name: `Branch #${nodeFormData.branches.length + 1}`\n    };\n    setNodeFormData({\n      ...nodeFormData,\n      branches: [...nodeFormData.branches, newBranch]\n    });\n    setBranchCount(branchCount + 1);\n  };\n\n  // Remove a branch from an if/else node\n  const removeBranch = branchId => {\n    if (!selectedNode || selectedNode.type !== 'ifelse') return;\n    setNodeFormData({\n      ...nodeFormData,\n      branches: nodeFormData.branches.filter(branch => branch.id !== branchId)\n    });\n  };\n\n  // Update branch name\n  const updateBranchName = (branchId, newName) => {\n    if (!selectedNode || selectedNode.type !== 'ifelse') return;\n    setNodeFormData({\n      ...nodeFormData,\n      branches: nodeFormData.branches.map(branch => branch.id === branchId ? {\n        ...branch,\n        name: newName\n      } : branch)\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100vw',\n      height: '100vh'\n    },\n    ref: reactFlowWrapper,\n    children: [/*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      onNodeClick: onNodeClick,\n      onEdgeClick: onEdgeClick,\n      onPaneClick: onPaneClick,\n      nodeTypes: nodeTypes,\n      fitView: true,\n      children: [/*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Background, {\n        variant: \"dots\",\n        gap: 12,\n        size: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Panel, {\n        position: \"top-left\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '10px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addActionNode,\n            style: {\n              padding: '10px',\n              backgroundColor: '#1890ff',\n              color: 'white',\n              border: 'none',\n              borderRadius: '5px',\n              cursor: 'pointer'\n            },\n            children: \"Add Node\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 687,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 7\n    }, this), showNodeMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: `${menuPosition.y}px`,\n        left: `${menuPosition.x}px`,\n        backgroundColor: 'white',\n        padding: '10px',\n        borderRadius: '5px',\n        boxShadow: '0 0 10px rgba(0,0,0,0.2)',\n        zIndex: 1000,\n        transform: 'translate(-50%, -50%)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px',\n          fontWeight: 'bold'\n        },\n        children: \"Add Node:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 719,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addNodeBetween('action'),\n          style: {\n            padding: '8px 12px',\n            backgroundColor: '#1890ff',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer'\n          },\n          children: \"Action Node\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 721,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addNodeBetween('ifelse'),\n          style: {\n            padding: '8px 12px',\n            backgroundColor: '#ffc53d',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer'\n          },\n          children: \"If / Else Node\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 720,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 706,\n      columnNumber: 9\n    }, this), showNodeForm && selectedNode && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        backgroundColor: 'white',\n        padding: '20px',\n        borderRadius: '8px',\n        boxShadow: '0 0 20px rgba(0,0,0,0.3)',\n        zIndex: 1000,\n        minWidth: '400px',\n        maxWidth: '600px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            margin: 0\n          },\n          children: selectedNode.type === 'action' ? 'Action' : selectedNode.type === 'ifelse' ? 'If / Else' : selectedNode.type === 'start' ? 'Start Node' : 'End Node'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 769,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowNodeForm(false),\n          style: {\n            background: 'none',\n            border: 'none',\n            fontSize: '18px',\n            cursor: 'pointer'\n          },\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 774,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 768,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleNodeFormSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '15px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '5px',\n              fontWeight: 'bold'\n            },\n            children: \"Action Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 789,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: nodeFormData.name,\n            onChange: e => setNodeFormData({\n              ...nodeFormData,\n              name: e.target.value\n            }),\n            style: {\n              width: '100%',\n              padding: '8px',\n              borderRadius: '4px',\n              border: '1px solid #d9d9d9'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 792,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 788,\n          columnNumber: 13\n        }, this), selectedNode.type === 'ifelse' && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '15px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              marginBottom: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                fontWeight: 'bold'\n              },\n              children: \"BRANCHES\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 808,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: addBranch,\n              style: {\n                padding: '5px 10px',\n                backgroundColor: '#1890ff',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px',\n                cursor: 'pointer',\n                fontSize: '12px'\n              },\n              children: \"+ Add branch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 809,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 807,\n            columnNumber: 17\n          }, this), nodeFormData.branches.map((branch, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '10px',\n              padding: '10px',\n              borderRadius: '4px',\n              border: '1px solid #f0f0f0',\n              backgroundColor: '#fafafa'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: branch.name,\n                onChange: e => updateBranchName(branch.id, e.target.value),\n                style: {\n                  width: '80%',\n                  padding: '8px',\n                  borderRadius: '4px',\n                  border: '1px solid #d9d9d9'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 838,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => removeBranch(branch.id),\n                style: {\n                  background: 'none',\n                  border: 'none',\n                  color: '#ff4d4f',\n                  cursor: 'pointer',\n                  fontSize: '16px'\n                },\n                children: \"\\u2715\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 849,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 837,\n              columnNumber: 21\n            }, this)\n          }, branch.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 827,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 806,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            marginTop: '20px'\n          },\n          children: [selectedNode.id !== 'start' && selectedNode.id !== 'end' && /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: deleteNode,\n            style: {\n              padding: '8px 16px',\n              backgroundColor: '#ff4d4f',\n              color: 'white',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer'\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 870,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setShowNodeForm(false),\n              style: {\n                padding: '8px 16px',\n                backgroundColor: '#f0f0f0',\n                color: '#000',\n                border: 'none',\n                borderRadius: '4px',\n                cursor: 'pointer'\n              },\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 886,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              style: {\n                padding: '8px 16px',\n                backgroundColor: '#1890ff',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px',\n                cursor: 'pointer'\n              },\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 900,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 885,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 868,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 787,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 753,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 669,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"IP47qMdtjjCbmCZ8G2okmTUdCm8=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","useRef","ReactFlow","MiniMap","Controls","Background","useNodesState","useEdgesState","addEdge","Panel","jsxDEV","_jsxDEV","nodeTypes","start","data","id","style","padding","borderRadius","background","border","width","children","display","alignItems","marginBottom","height","justifyContent","marginRight","role","fileName","_jsxFileName","lineNumber","columnNumber","fontWeight","label","action","ifelse","end","branch","textAlign","initialNodes","type","position","x","y","initialEdges","source","target","App","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","nodeCount","setNodeCount","selectedNode","setSelectedNode","showNodeMenu","setShowNodeMenu","menuPosition","setMenuPosition","clickedEdgeId","setClickedEdgeId","showNodeForm","setShowNodeForm","nodeFormData","setNodeFormData","name","branchCount","setBranchCount","reactFlowWrapper","onNodeClick","event","node","stopPropagation","branches","onPaneClick","onEdgeClick","edge","preventDefault","sourceNode","find","targetNode","addNodeBetween","nodeType","e","newNodePosition","newNodeId","newNode","branchNodes","actionNodes","mergeNode","branchEdges","nds","eds","filteredEdges","filter","addActionNode","lastNodeBeforeEnd","lastNodeY","endEdges","length","lastNode","handleNodeFormSubmit","map","updatedNode","includes","startsWith","split","branchIndex","parseInt","deleteNode","incomingEdges","outgoingEdges","relatedBranchNodes","relatedBranchNodeIds","some","be","push","addBranch","newBranchId","newBranch","removeBranch","branchId","updateBranchName","newName","ref","fitView","variant","gap","size","onClick","backgroundColor","color","cursor","top","left","boxShadow","zIndex","transform","minWidth","maxWidth","margin","fontSize","onSubmit","value","onChange","index","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/arunk/Documents/Arun works/tt/frontend/src/App.js"],"sourcesContent":["import React, { useState, useCallback, useRef } from 'react';\nimport ReactFlow, {\n  MiniMap,\n  Controls,\n  Background,\n  useNodesState,\n  useEdgesState,\n  addEdge,\n  Panel,\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\n\n// Custom node types\nconst nodeTypes = {\n  start: ({ data, id }) => (\n    <div style={{\n      padding: '15px',\n      borderRadius: '8px',\n      background: '#e6f7ff',\n      border: '1px solid #1890ff',\n      width: '180px',\n    }}>\n      <div style={{ display: 'flex', alignItems: 'center', marginBottom: '8px' }}>\n        <div style={{ \n          width: '30px', \n          height: '30px', \n          borderRadius: '50%', \n          background: '#e6f7ff', \n          display: 'flex', \n          alignItems: 'center', \n          justifyContent: 'center',\n          marginRight: '10px',\n          border: '1px solid #1890ff'\n        }}>\n          <span role=\"img\" aria-label=\"start\">🚀</span>\n        </div>\n        <div style={{ fontWeight: 'bold' }}>Start Node</div>\n      </div>\n      <div>{data.label || 'Start'}</div>\n    </div>\n  ),\n  action: ({ data, id }) => (\n    <div style={{\n      padding: '15px',\n      borderRadius: '8px',\n      background: '#f0f5ff',\n      border: '1px solid #597ef7',\n      width: '180px',\n    }}>\n      <div style={{ display: 'flex', alignItems: 'center', marginBottom: '8px' }}>\n        <div style={{ \n          width: '30px', \n          height: '30px', \n          borderRadius: '50%', \n          background: '#f0f5ff', \n          display: 'flex', \n          alignItems: 'center', \n          justifyContent: 'center',\n          marginRight: '10px',\n          border: '1px solid #597ef7'\n        }}>\n          <span role=\"img\" aria-label=\"action\">⚙️</span>\n        </div>\n        <div style={{ fontWeight: 'bold' }}>Action Node</div>\n      </div>\n      <div>{data.label || 'Action'}</div>\n    </div>\n  ),\n  ifelse: ({ data, id }) => (\n    <div style={{\n      padding: '15px',\n      borderRadius: '8px',\n      background: '#fff7e6',\n      border: '1px solid #ffc53d',\n      width: '180px',\n    }}>\n      <div style={{ display: 'flex', alignItems: 'center', marginBottom: '8px' }}>\n        <div style={{ \n          width: '30px', \n          height: '30px', \n          borderRadius: '50%', \n          background: '#fff7e6', \n          display: 'flex', \n          alignItems: 'center', \n          justifyContent: 'center',\n          marginRight: '10px',\n          border: '1px solid #ffc53d'\n        }}>\n          <span role=\"img\" aria-label=\"if-else\">🔀</span>\n        </div>\n        <div style={{ fontWeight: 'bold' }}>If / Else</div>\n      </div>\n      <div>{data.label || 'If / Else'}</div>\n    </div>\n  ),\n  end: ({ data, id }) => (\n    <div style={{\n      padding: '15px',\n      borderRadius: '8px',\n      background: '#f9f0ff',\n      border: '1px solid #9254de',\n      width: '180px',\n    }}>\n      <div style={{ display: 'flex', alignItems: 'center', marginBottom: '8px' }}>\n        <div style={{ \n          width: '30px', \n          height: '30px', \n          borderRadius: '50%', \n          background: '#f9f0ff', \n          display: 'flex', \n          alignItems: 'center', \n          justifyContent: 'center',\n          marginRight: '10px',\n          border: '1px solid #9254de'\n        }}>\n          <span role=\"img\" aria-label=\"end\">🏁</span>\n        </div>\n        <div style={{ fontWeight: 'bold' }}>End Node</div>\n      </div>\n      <div>{data.label || 'END'}</div>\n    </div>\n  ),\n  branch: ({ data, id }) => (\n    <div style={{\n      padding: '10px',\n      borderRadius: '8px',\n      background: '#f5f5f5',\n      border: '1px solid #d9d9d9',\n      width: '120px',\n      textAlign: 'center',\n    }}>\n      <div>{data.label || 'Branch'}</div>\n    </div>\n  ),\n};\n\nconst initialNodes = [\n  {\n    id: 'start',\n    type: 'start',\n    position: { x: 300, y: 50 },\n    data: { label: 'Start' },\n  },\n  {\n    id: 'end',\n    type: 'end',\n    position: { x: 300, y: 250 },\n    data: { label: 'END' },\n  },\n];\n\nconst initialEdges = [\n  { id: 'start->end', source: 'start', target: 'end', type: 'smoothstep' },\n];\n\nexport default function App() {\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState(initialEdges);\n  const [nodeCount, setNodeCount] = useState(1); // For unique node IDs\n  const [selectedNode, setSelectedNode] = useState(null);\n  const [showNodeMenu, setShowNodeMenu] = useState(false);\n  const [menuPosition, setMenuPosition] = useState({ x: 0, y: 0 });\n  const [clickedEdgeId, setClickedEdgeId] = useState(null);\n  const [showNodeForm, setShowNodeForm] = useState(false);\n  const [nodeFormData, setNodeFormData] = useState({ name: '', type: '' });\n  const [branchCount, setBranchCount] = useState(1);\n  const reactFlowWrapper = useRef(null);\n\n  // Handle node click\n  const onNodeClick = (event, node) => {\n    event.stopPropagation();\n    setSelectedNode(node);\n    setNodeFormData({\n      id: node.id,\n      name: node.data.label,\n      type: node.type,\n      branches: node.data.branches || []\n    });\n    setShowNodeForm(true);\n  };\n\n  // Handle background click to close forms\n  const onPaneClick = () => {\n    setSelectedNode(null);\n    setShowNodeForm(false);\n    setShowNodeMenu(false);\n  };\n\n  // Handle edge click to show add node menu\n  const onEdgeClick = (event, edge) => {\n    event.preventDefault();\n    setClickedEdgeId(edge.id);\n    \n    // Calculate position for the node menu\n    const sourceNode = nodes.find(node => node.id === edge.source);\n    const targetNode = nodes.find(node => node.id === edge.target);\n    \n    if (sourceNode && targetNode) {\n      const x = (sourceNode.position.x + targetNode.position.x) / 2;\n      const y = (sourceNode.position.y + targetNode.position.y) / 2;\n      \n      setMenuPosition({ x, y });\n      setShowNodeMenu(true);\n    }\n  };\n\n  // Add a new node between two existing nodes\n  const addNodeBetween = (nodeType) => {\n    if (!clickedEdgeId) return;\n    \n    const edge = edges.find(e => e.id === clickedEdgeId);\n    if (!edge) return;\n    \n    const sourceNode = nodes.find(node => node.id === edge.source);\n    const targetNode = nodes.find(node => node.id === edge.target);\n    \n    if (!sourceNode || !targetNode) return;\n    \n    // Calculate position for the new node\n    const newNodePosition = {\n      x: (sourceNode.position.x + targetNode.position.x) / 2,\n      y: (sourceNode.position.y + targetNode.position.y) / 2,\n    };\n    \n    const newNodeId = `${nodeType}-${nodeCount}`;\n    \n    let newNode = {\n      id: newNodeId,\n      type: nodeType,\n      position: newNodePosition,\n      data: { label: nodeType === 'action' ? 'Action Node' : 'If / Else' },\n    };\n    \n    // If it's an if/else node, add default branches\n    if (nodeType === 'ifelse') {\n      newNode.data.branches = [\n        { id: 'branch-1', name: 'Branch #1' },\n        { id: 'branch-2', name: 'Branch #2' }\n      ];\n      \n      // Create branch nodes\n      const branchNodes = [\n        {\n          id: `${newNodeId}-branch-1-label`,\n          type: 'branch',\n          position: { \n            x: newNodePosition.x - 150, \n            y: newNodePosition.y + 100 \n          },\n          data: { label: 'Branch #1' },\n        },\n        {\n          id: `${newNodeId}-branch-2-label`,\n          type: 'branch',\n          position: { \n            x: newNodePosition.x + 150, \n            y: newNodePosition.y + 100 \n          },\n          data: { label: 'Branch #2' },\n        },\n        {\n          id: `${newNodeId}-else-label`,\n          type: 'branch',\n          position: { \n            x: newNodePosition.x, \n            y: newNodePosition.y + 100 \n          },\n          data: { label: 'Else' },\n        }\n      ];\n      \n      // Create action nodes for each branch (instead of end nodes)\n      const actionNodes = [\n        {\n          id: `${newNodeId}-branch-1-action`,\n          type: 'action',\n          position: { \n            x: newNodePosition.x - 150, \n            y: newNodePosition.y + 200 \n          },\n          data: { label: 'Branch #1 Action' },\n        },\n        {\n          id: `${newNodeId}-branch-2-action`,\n          type: 'action',\n          position: { \n            x: newNodePosition.x + 150, \n            y: newNodePosition.y + 200 \n          },\n          data: { label: 'Branch #2 Action' },\n        },\n        {\n          id: `${newNodeId}-else-action`,\n          type: 'action',\n          position: { \n            x: newNodePosition.x, \n            y: newNodePosition.y + 200 \n          },\n          data: { label: 'Else Action' },\n        }\n      ];\n      \n      // Create a merge node to join all branches\n      const mergeNode = {\n        id: `${newNodeId}-merge`,\n        type: 'action',\n        position: { \n          x: newNodePosition.x, \n          y: newNodePosition.y + 300 \n        },\n        data: { label: 'Merge' },\n      };\n      \n      // Create branch edges\n      const branchEdges = [\n        // Connect if/else to branch labels\n        {\n          id: `${newNodeId}-to-branch-1`,\n          source: newNodeId,\n          target: `${newNodeId}-branch-1-label`,\n          type: 'smoothstep',\n        },\n        {\n          id: `${newNodeId}-to-branch-2`,\n          source: newNodeId,\n          target: `${newNodeId}-branch-2-label`,\n          type: 'smoothstep',\n        },\n        {\n          id: `${newNodeId}-to-else`,\n          source: newNodeId,\n          target: `${newNodeId}-else-label`,\n          type: 'smoothstep',\n        },\n        \n        // Connect branch labels to actions\n        {\n          id: `${newNodeId}-branch-1-label-to-action`,\n          source: `${newNodeId}-branch-1-label`,\n          target: `${newNodeId}-branch-1-action`,\n          type: 'smoothstep',\n        },\n        {\n          id: `${newNodeId}-branch-2-label-to-action`,\n          source: `${newNodeId}-branch-2-label`,\n          target: `${newNodeId}-branch-2-action`,\n          type: 'smoothstep',\n        },\n        {\n          id: `${newNodeId}-else-label-to-action`,\n          source: `${newNodeId}-else-label`,\n          target: `${newNodeId}-else-action`,\n          type: 'smoothstep',\n        },\n        \n        // Connect actions to merge node\n        {\n          id: `${newNodeId}-branch-1-action-to-merge`,\n          source: `${newNodeId}-branch-1-action`,\n          target: `${newNodeId}-merge`,\n          type: 'smoothstep',\n        },\n        {\n          id: `${newNodeId}-branch-2-action-to-merge`,\n          source: `${newNodeId}-branch-2-action`,\n          target: `${newNodeId}-merge`,\n          type: 'smoothstep',\n        },\n        {\n          id: `${newNodeId}-else-action-to-merge`,\n          source: `${newNodeId}-else-action`,\n          target: `${newNodeId}-merge`,\n          type: 'smoothstep',\n        },\n        \n        // Connect merge node to target\n        {\n          id: `${newNodeId}-merge-to-target`,\n          source: `${newNodeId}-merge`,\n          target: edge.target,\n          type: 'smoothstep',\n        }\n      ];\n      \n      // Add all nodes and edges\n      setNodes(nds => [...nds, newNode, ...branchNodes, ...actionNodes, mergeNode]);\n      setEdges(eds => {\n        // Remove the original edge\n        const filteredEdges = eds.filter(e => e.id !== clickedEdgeId);\n        \n        // Add new edges\n        return [\n          ...filteredEdges,\n          {\n            id: `${edge.source}-${newNodeId}`,\n            source: edge.source,\n            target: newNodeId,\n            type: 'smoothstep',\n          },\n          ...branchEdges\n        ];\n      });\n    } else {\n      // For action nodes\n      setNodes(nds => [...nds, newNode]);\n      \n      // Update edges\n      setEdges(eds => {\n        // Remove the original edge\n        const filteredEdges = eds.filter(e => e.id !== clickedEdgeId);\n        \n        // Add new edges\n        return [\n          ...filteredEdges,\n          {\n            id: `${edge.source}-${newNodeId}`,\n            source: edge.source,\n            target: newNodeId,\n            type: 'smoothstep',\n          },\n          {\n            id: `${newNodeId}-${edge.target}`,\n            source: newNodeId,\n            target: edge.target,\n            type: 'smoothstep',\n          }\n        ];\n      });\n    }\n    \n    setNodeCount(nodeCount + 1);\n    setShowNodeMenu(false);\n  };\n\n  // Add a new action node directly from the Add Node button\n  const addActionNode = () => {\n    const newNodeId = `action-${nodeCount}`;\n    \n    // Find the last node before the end node\n    let lastNodeBeforeEnd = 'start';\n    let lastNodeY = 50; // Default Y position of start node\n    \n    // Find all edges that connect to the end node\n    const endEdges = edges.filter(edge => edge.target === 'end');\n    \n    if (endEdges.length > 0) {\n      // Get the source node of the edge connecting to end\n      lastNodeBeforeEnd = endEdges[0].source;\n      const lastNode = nodes.find(node => node.id === lastNodeBeforeEnd);\n      if (lastNode) {\n        lastNodeY = lastNode.position.y;\n      }\n    }\n    \n    // Calculate position for the new node\n    const newNodePosition = {\n      x: 300, // Keep X position consistent\n      y: lastNodeY + 150, // Position below the last node\n    };\n    \n    // Create the new node\n    const newNode = {\n      id: newNodeId,\n      type: 'action',\n      position: newNodePosition,\n      data: { label: 'Action Node' },\n    };\n    \n    // Add the new node\n    setNodes(nds => [...nds, newNode]);\n    \n    // Remove the edge connecting to end\n    setEdges(eds => {\n      // Filter out the edge connecting to end\n      const filteredEdges = eds.filter(edge => !(edge.source === lastNodeBeforeEnd && edge.target === 'end'));\n      \n      // Add new edges\n      return [\n        ...filteredEdges,\n        {\n          id: `${lastNodeBeforeEnd}-${newNodeId}`,\n          source: lastNodeBeforeEnd,\n          target: newNodeId,\n          type: 'smoothstep',\n        },\n        {\n          id: `${newNodeId}-end`,\n          source: newNodeId,\n          target: 'end',\n          type: 'smoothstep',\n        }\n      ];\n    });\n    \n    setNodeCount(nodeCount + 1);\n  };\n\n  // Handle form submission for node editing\n  const handleNodeFormSubmit = (e) => {\n    e.preventDefault();\n    \n    if (!selectedNode) return;\n    \n    // Update node data\n    setNodes(nds => \n      nds.map(node => {\n        if (node.id === selectedNode.id) {\n          // For if/else nodes, update branch names too\n          if (node.type === 'ifelse') {\n            // Update branch label nodes\n            const updatedNode = {\n              ...node,\n              data: {\n                ...node.data,\n                label: nodeFormData.name,\n                branches: nodeFormData.branches\n              }\n            };\n            return updatedNode;\n          }\n          \n          // For other node types\n          return {\n            ...node,\n            data: {\n              ...node.data,\n              label: nodeFormData.name\n            }\n          };\n        } else if (selectedNode.type === 'ifelse' && node.id.includes('branch') && node.id.startsWith(selectedNode.id.split('-')[0])) {\n          // Update branch label nodes\n          const branchIndex = parseInt(node.id.split('-')[1]) - 1;\n          if (branchIndex >= 0 && branchIndex < nodeFormData.branches.length) {\n            return {\n              ...node,\n              data: {\n                ...node.data,\n                label: nodeFormData.branches[branchIndex].name\n              }\n            };\n          }\n        }\n        return node;\n      })\n    );\n    \n    setShowNodeForm(false);\n    setSelectedNode(null);\n  };\n\n  // Handle node deletion\n  const deleteNode = () => {\n    if (!selectedNode || selectedNode.id === 'start' || selectedNode.id === 'end') return;\n    \n    // Find incoming and outgoing edges\n    const incomingEdges = edges.filter(edge => edge.target === selectedNode.id);\n    const outgoingEdges = edges.filter(edge => edge.source === selectedNode.id);\n    \n    // For if/else nodes, we need to handle differently\n    if (selectedNode.type === 'ifelse') {\n      // Find all related branch nodes and their edges\n      const relatedBranchNodes = nodes.filter(node => \n        node.id.includes('branch') && \n        (node.id.startsWith(selectedNode.id.split('-')[0]) || node.id.includes('else'))\n      );\n      \n      const relatedBranchNodeIds = relatedBranchNodes.map(node => node.id);\n      \n      // Find all edges connected to branch nodes\n      const branchEdges = edges.filter(edge => \n        relatedBranchNodeIds.includes(edge.source) || \n        relatedBranchNodeIds.includes(edge.target)\n      );\n      \n      // Remove the if/else node, branch nodes, and all related edges\n      setNodes(nds => nds.filter(node => \n        node.id !== selectedNode.id && \n        !relatedBranchNodeIds.includes(node.id)\n      ));\n      \n      // Remove all edges connected to this node and branch nodes\n      setEdges(eds => {\n        const filteredEdges = eds.filter(edge => \n          edge.source !== selectedNode.id && \n          edge.target !== selectedNode.id &&\n          !branchEdges.some(be => be.id === edge.id)\n        );\n        \n        // Connect the incoming node to the end node\n        if (incomingEdges.length > 0) {\n          filteredEdges.push({\n            id: `${incomingEdges[0].source}-end`,\n            source: incomingEdges[0].source,\n            target: 'end',\n            type: 'smoothstep',\n          });\n        }\n        \n        return filteredEdges;\n      });\n    } else {\n      // For regular action nodes\n      // Remove just this node\n      setNodes(nds => nds.filter(node => node.id !== selectedNode.id));\n      \n      // Remove edges connected to this node and reconnect\n      setEdges(eds => {\n        const filteredEdges = eds.filter(edge => \n          edge.source !== selectedNode.id && \n          edge.target !== selectedNode.id\n        );\n        \n        // If there were both incoming and outgoing edges, connect them\n        if (incomingEdges.length > 0 && outgoingEdges.length > 0) {\n          filteredEdges.push({\n            id: `${incomingEdges[0].source}-${outgoingEdges[0].target}`,\n            source: incomingEdges[0].source,\n            target: outgoingEdges[0].target,\n            type: 'smoothstep',\n          });\n        }\n        \n        return filteredEdges;\n      });\n    }\n    \n    setShowNodeForm(false);\n    setSelectedNode(null);\n  };\n\n  // Add a new branch to an if/else node\n  const addBranch = () => {\n    if (!selectedNode || selectedNode.type !== 'ifelse') return;\n    \n    const newBranchId = `branch-${nodeFormData.branches.length + 1}`;\n    const newBranch = { id: newBranchId, name: `Branch #${nodeFormData.branches.length + 1}` };\n    \n    setNodeFormData({\n      ...nodeFormData,\n      branches: [...nodeFormData.branches, newBranch]\n    });\n    \n    setBranchCount(branchCount + 1);\n  };\n\n  // Remove a branch from an if/else node\n  const removeBranch = (branchId) => {\n    if (!selectedNode || selectedNode.type !== 'ifelse') return;\n    \n    setNodeFormData({\n      ...nodeFormData,\n      branches: nodeFormData.branches.filter(branch => branch.id !== branchId)\n    });\n  };\n\n  // Update branch name\n  const updateBranchName = (branchId, newName) => {\n    if (!selectedNode || selectedNode.type !== 'ifelse') return;\n    \n    setNodeFormData({\n      ...nodeFormData,\n      branches: nodeFormData.branches.map(branch => \n        branch.id === branchId ? { ...branch, name: newName } : branch\n      )\n    });\n  };\n\n  return (\n    <div style={{ width: '100vw', height: '100vh' }} ref={reactFlowWrapper}>\n      <ReactFlow\n        nodes={nodes}\n        edges={edges}\n        onNodesChange={onNodesChange}\n        onEdgesChange={onEdgesChange}\n        onNodeClick={onNodeClick}\n        onEdgeClick={onEdgeClick}\n        onPaneClick={onPaneClick}\n        nodeTypes={nodeTypes}\n        fitView\n      >\n        <Controls />\n        <MiniMap />\n        <Background variant=\"dots\" gap={12} size={1} />\n        \n        <Panel position=\"top-left\">\n          <div style={{ display: 'flex', gap: '10px' }}>\n            <button\n              onClick={addActionNode}\n              style={{\n                padding: '10px',\n                backgroundColor: '#1890ff',\n                color: 'white',\n                border: 'none',\n                borderRadius: '5px',\n                cursor: 'pointer',\n              }}\n            >\n              Add Node\n            </button>\n          </div>\n        </Panel>\n      </ReactFlow>\n\n      {/* Node Selection Menu */}\n      {showNodeMenu && (\n        <div\n          style={{\n            position: 'absolute',\n            top: `${menuPosition.y}px`,\n            left: `${menuPosition.x}px`,\n            backgroundColor: 'white',\n            padding: '10px',\n            borderRadius: '5px',\n            boxShadow: '0 0 10px rgba(0,0,0,0.2)',\n            zIndex: 1000,\n            transform: 'translate(-50%, -50%)',\n          }}\n        >\n          <div style={{ marginBottom: '10px', fontWeight: 'bold' }}>Add Node:</div>\n          <div style={{ display: 'flex', gap: '10px' }}>\n            <button\n              onClick={() => addNodeBetween('action')}\n              style={{\n                padding: '8px 12px',\n                backgroundColor: '#1890ff',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px',\n                cursor: 'pointer',\n              }}\n            >\n              Action Node\n            </button>\n            <button\n              onClick={() => addNodeBetween('ifelse')}\n              style={{\n                padding: '8px 12px',\n                backgroundColor: '#ffc53d',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px',\n                cursor: 'pointer',\n              }}\n            >\n              If / Else Node\n            </button>\n          </div>\n        </div>\n      )}\n\n      {/* Node Edit Form */}\n      {showNodeForm && selectedNode && (\n        <div\n          style={{\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            backgroundColor: 'white',\n            padding: '20px',\n            borderRadius: '8px',\n            boxShadow: '0 0 20px rgba(0,0,0,0.3)',\n            zIndex: 1000,\n            minWidth: '400px',\n            maxWidth: '600px',\n          }}\n        >\n          <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '20px' }}>\n            <h3 style={{ margin: 0 }}>\n              {selectedNode.type === 'action' ? 'Action' : \n               selectedNode.type === 'ifelse' ? 'If / Else' : \n               selectedNode.type === 'start' ? 'Start Node' : 'End Node'}\n            </h3>\n            <button\n              onClick={() => setShowNodeForm(false)}\n              style={{\n                background: 'none',\n                border: 'none',\n                fontSize: '18px',\n                cursor: 'pointer',\n              }}\n            >\n              ✕\n            </button>\n          </div>\n          \n          <form onSubmit={handleNodeFormSubmit}>\n            <div style={{ marginBottom: '15px' }}>\n              <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold' }}>\n                Action Name\n              </label>\n              <input\n                type=\"text\"\n                value={nodeFormData.name}\n                onChange={(e) => setNodeFormData({ ...nodeFormData, name: e.target.value })}\n                style={{\n                  width: '100%',\n                  padding: '8px',\n                  borderRadius: '4px',\n                  border: '1px solid #d9d9d9',\n                }}\n              />\n            </div>\n            \n            {selectedNode.type === 'ifelse' && (\n              <div style={{ marginBottom: '15px' }}>\n                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '10px' }}>\n                  <label style={{ fontWeight: 'bold' }}>BRANCHES</label>\n                  <button\n                    type=\"button\"\n                    onClick={addBranch}\n                    style={{\n                      padding: '5px 10px',\n                      backgroundColor: '#1890ff',\n                      color: 'white',\n                      border: 'none',\n                      borderRadius: '4px',\n                      cursor: 'pointer',\n                      fontSize: '12px',\n                    }}\n                  >\n                    + Add branch\n                  </button>\n                </div>\n                \n                {nodeFormData.branches.map((branch, index) => (\n                  <div \n                    key={branch.id} \n                    style={{ \n                      marginBottom: '10px',\n                      padding: '10px',\n                      borderRadius: '4px',\n                      border: '1px solid #f0f0f0',\n                      backgroundColor: '#fafafa',\n                    }}\n                  >\n                    <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                      <input\n                        type=\"text\"\n                        value={branch.name}\n                        onChange={(e) => updateBranchName(branch.id, e.target.value)}\n                        style={{\n                          width: '80%',\n                          padding: '8px',\n                          borderRadius: '4px',\n                          border: '1px solid #d9d9d9',\n                        }}\n                      />\n                      <button\n                        type=\"button\"\n                        onClick={() => removeBranch(branch.id)}\n                        style={{\n                          background: 'none',\n                          border: 'none',\n                          color: '#ff4d4f',\n                          cursor: 'pointer',\n                          fontSize: '16px',\n                        }}\n                      >\n                        ✕\n                      </button>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n            \n            <div style={{ display: 'flex', justifyContent: 'space-between', marginTop: '20px' }}>\n              {selectedNode.id !== 'start' && selectedNode.id !== 'end' && (\n                <button\n                  type=\"button\"\n                  onClick={deleteNode}\n                  style={{\n                    padding: '8px 16px',\n                    backgroundColor: '#ff4d4f',\n                    color: 'white',\n                    border: 'none',\n                    borderRadius: '4px',\n                    cursor: 'pointer',\n                  }}\n                >\n                  Delete\n                </button>\n              )}\n              <div style={{ display: 'flex', gap: '10px' }}>\n                <button\n                  type=\"button\"\n                  onClick={() => setShowNodeForm(false)}\n                  style={{\n                    padding: '8px 16px',\n                    backgroundColor: '#f0f0f0',\n                    color: '#000',\n                    border: 'none',\n                    borderRadius: '4px',\n                    cursor: 'pointer',\n                  }}\n                >\n                  Cancel\n                </button>\n                <button\n                  type=\"submit\"\n                  style={{\n                    padding: '8px 16px',\n                    backgroundColor: '#1890ff',\n                    color: 'white',\n                    border: 'none',\n                    borderRadius: '4px',\n                    cursor: 'pointer',\n                  }}\n                >\n                  Save\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}